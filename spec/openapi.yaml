components:
  schemas:
    Action:
      properties:
        actionTypeId:
          type: string
        target:
          type: string
        targetType:
          type: string
      type: object
    ApiApplicationBaseDTO:
      properties:
        contactUserName:
          type: string
        id:
          type: string
        name:
          type: string
        organizationId:
          type: string
        publicId:
          type: string
      type: object
    ApiApplicationCategoryDTO:
      properties:
        color:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
        organizationId:
          type: string
      type: object
    ApiApplicationDTO:
      properties:
        applicationTags:
          items:
            $ref: '#/components/schemas/ApiApplicationTagDTO'
          type: array
        contactUserName:
          type: string
        id:
          type: string
        name:
          type: string
        organizationId:
          type: string
        publicId:
          type: string
      type: object
    ApiApplicationEvaluationCommitDTO:
      properties:
        commitHash:
          type: string
        reportUrl:
          type: string
        scanId:
          type: string
        scanTime:
          format: date-time
          type: string
      type: object
    ApiApplicationEvaluationResultDTOV2:
      properties:
        embeddableReportHtmlUrl:
          type: string
        reason:
          type: string
        reportDataUrl:
          type: string
        reportHtmlUrl:
          type: string
        reportPdfUrl:
          type: string
        status:
          type: string
      type: object
    ApiApplicationEvaluationStatusDTOV2:
      properties:
        statusUrl:
          type: string
      type: object
    ApiApplicationListDTO:
      properties:
        applications:
          items:
            $ref: '#/components/schemas/ApiApplicationDTO'
          type: array
      type: object
    ApiApplicationReportDTOV2:
      properties:
        applicationId:
          type: string
        embeddableReportHtmlUrl:
          type: string
        evaluationDate:
          format: date-time
          type: string
        latestReportHtmlUrl:
          type: string
        reportDataUrl:
          type: string
        reportHtmlUrl:
          type: string
        reportPdfUrl:
          type: string
        stage:
          type: string
      type: object
    ApiApplicationTagDTO:
      properties:
        applicationId:
          type: string
        id:
          type: string
        tagId:
          type: string
      type: object
    ApiApplicationViolationDTOV2:
      properties:
        application:
          $ref: '#/components/schemas/ApiApplicationBaseDTO'
        policyViolations:
          items:
            $ref: '#/components/schemas/ApiEnhancedPolicyViolationDTOV2'
          type: array
      type: object
    ApiApplicationViolationListDTOV2:
      properties:
        applicationViolations:
          items:
            $ref: '#/components/schemas/ApiApplicationViolationDTOV2'
          type: array
      type: object
    ApiApplicationWaiverDTO:
      properties:
        application:
          $ref: '#/components/schemas/ApiApplicationBaseDTO'
        stages:
          items:
            $ref: '#/components/schemas/ApiPolicyViolationStageDTO'
          type: array
      type: object
    ApiArtifactoryConnectionDTO:
      properties:
        artifactoryConnectionId:
          type: string
        baseUrl:
          type: string
        isAnonymous:
          type: boolean
        ownerId:
          type: string
        ownerType:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          type: string
        password:
          type: string
        username:
          type: string
      type: object
    ApiArtifactoryConnectionStatusRequestDTO:
      properties:
        allowOverride:
          type: boolean
        enabled:
          type: boolean
      type: object
    ApiArtifactoryConnectionStatusResponseDTO:
      properties:
        allowChange:
          type: boolean
        allowOverride:
          type: boolean
        enabled:
          type: boolean
        inheritedFromOrgEnabled:
          type: boolean
        inheritedFromOrganizationId:
          type: string
        inheritedFromOrganizationName:
          type: string
      type: object
    ApiComponentChangeActionDTO:
      properties:
        component:
          $ref: '#/components/schemas/ApiComponentDTOV2'
      type: object
    ApiComponentDTOV2:
      properties:
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        displayName:
          type: string
        hash:
          type: string
        packageUrl:
          type: string
        proprietary:
          type: boolean
        sha256:
          type: string
        thirdParty:
          type: boolean
      type: object
    ApiComponentDetailsDTOV2:
      properties:
        catalogDate:
          format: date-time
          type: string
        component:
          $ref: '#/components/schemas/ApiComponentDTOV2'
        hygieneRating:
          nullable: true
          type: string
        integrityRating:
          nullable: true
          type: string
        licenseData:
          $ref: '#/components/schemas/ApiLicenseDataDTO'
        matchState:
          type: string
        policyData:
          $ref: '#/components/schemas/ApiComponentPolicyViolationListDTOV2'
        projectData:
          $ref: '#/components/schemas/ApiComponentProjectDataDTO'
        relativePopularity:
          format: int32
          nullable: true
          type: integer
        securityData:
          $ref: '#/components/schemas/ApiSecurityDataDTO'
      type: object
    ApiComponentDetailsRequestDTOV2:
      properties:
        components:
          items:
            $ref: '#/components/schemas/ApiComponentDTOV2'
          type: array
      type: object
    ApiComponentDetailsResultDTOV2:
      properties:
        componentDetails:
          items:
            $ref: '#/components/schemas/ApiComponentDetailsDTOV2'
          type: array
      type: object
    ApiComponentEvaluationRequestDTOV2:
      properties:
        components:
          items:
            $ref: '#/components/schemas/ApiComponentDTOV2'
          type: array
      type: object
    ApiComponentEvaluationResultDTOV2:
      properties:
        applicationId:
          type: string
        errorMessage:
          nullable: true
          type: string
        evaluationDate:
          format: date-time
          type: string
        isError:
          type: boolean
        results:
          items:
            $ref: '#/components/schemas/ApiComponentDetailsDTOV2'
          type: array
        submittedDate:
          format: date-time
          type: string
      type: object
    ApiComponentEvaluationTicketDTOV2:
      properties:
        applicationId:
          type: string
        resultId:
          type: string
        resultsUrl:
          type: string
        submittedDate:
          format: date-time
          type: string
      type: object
    ApiComponentIdentifierDTOV2:
      properties:
        coordinates:
          additionalProperties:
            type: string
          type: object
        format:
          type: string
      type: object
    ApiComponentOrPurlIdentifierDTOV2:
      properties:
        coordinates:
          additionalProperties:
            type: string
          type: object
        format:
          type: string
        packageUrl:
          type: string
      type: object
    ApiComponentPolicyViolationDTO:
      properties:
        component:
          $ref: '#/components/schemas/ApiComponentDTOV2'
        waivedPolicyViolations:
          items:
            $ref: '#/components/schemas/ApiWaivedPolicyViolationDTO'
          type: array
      type: object
    ApiComponentPolicyViolationListDTOV2:
      properties:
        policyViolations:
          items:
            $ref: '#/components/schemas/ApiPolicyViolationDTOV2'
          type: array
      type: object
    ApiComponentPolicyWaiversDTO:
      properties:
        componentPolicyWaivers:
          items:
            $ref: '#/components/schemas/ApiPolicyWaiverDTO'
          type: array
      type: object
    ApiComponentProjectDataDTO:
      properties:
        firstReleaseDate:
          format: date-time
          type: string
        lastReleaseDate:
          format: date-time
          type: string
        projectMetadata:
          $ref: '#/components/schemas/ApiComponentProjectMetadataDTO'
        sourceControlManagement:
          $ref: '#/components/schemas/ApiComponentProjectScmDTO'
      type: object
    ApiComponentProjectMetadataDTO:
      properties:
        description:
          type: string
        organization:
          type: string
      type: object
    ApiComponentProjectScmDTO:
      properties:
        scmDetails:
          $ref: '#/components/schemas/ApiComponentProjectScmDetailsDTO'
        scmMetadata:
          $ref: '#/components/schemas/ApiComponentProjectScmMetadataDTO'
        scmUrl:
          type: string
      type: object
    ApiComponentProjectScmDetailsDTO:
      properties:
        commitsPerMonth:
          format: int32
          type: integer
        uniqueDevsPerMonth:
          format: int32
          type: integer
      type: object
    ApiComponentProjectScmMetadataDTO:
      properties:
        forks:
          format: int32
          type: integer
        stars:
          format: int32
          type: integer
      type: object
    ApiComponentReleasedFromQuarantineDTO:
      properties:
        componentReleasedFromQuarantine:
          $ref: '#/components/schemas/ApiRepositoryComponentPolicyViolationDTO'
      type: object
    ApiComponentRemediationDTO:
      properties:
        remediation:
          $ref: '#/components/schemas/ApiComponentRemediationValueDTO'
      type: object
    ApiComponentRemediationValueDTO:
      properties:
        versionChanges:
          items:
            $ref: '#/components/schemas/ApiVersionChangeOptionDTO'
          type: array
      type: object
    ApiComponentTransitivePolicyViolationsDTO:
      properties:
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        displayName:
          type: string
        hash:
          type: string
        isInnerSource:
          type: boolean
        packageUrl:
          type: string
        transitivePolicyViolations:
          items:
            $ref: '#/components/schemas/ApiStagePolicyViolationComponentDTO'
          type: array
      type: object
    ApiComponentWaiversDTO:
      properties:
        applicationWaivers:
          items:
            $ref: '#/components/schemas/ApiApplicationWaiverDTO'
          type: array
        repositoryWaivers:
          items:
            $ref: '#/components/schemas/ApiRepositoryWaiverDTO'
          type: array
      type: object
    ApiComponentsInQuarantineDTO:
      properties:
        componentsInQuarantine:
          items:
            $ref: '#/components/schemas/ApiRepositoryComponentsInQuarantineDTO'
          type: array
      type: object
    ApiCompositeSourceControlDTO:
      properties:
        baseBranch:
          $ref: '#/components/schemas/ApiCompositeValueDTOString'
        commitStatusEnabled:
          $ref: '#/components/schemas/ApiCompositeValueDTOBoolean'
        id:
          type: string
        ownerId:
          type: string
        provider:
          $ref: '#/components/schemas/ApiCompositeValueDTOString'
        pullRequestCommentingEnabled:
          $ref: '#/components/schemas/ApiCompositeValueDTOBoolean'
        remediationPullRequestsEnabled:
          $ref: '#/components/schemas/ApiCompositeValueDTOBoolean'
        repositoryUrl:
          type: string
        sourceControlEvaluationsEnabled:
          $ref: '#/components/schemas/ApiCompositeValueDTOBoolean'
        sourceControlScanTarget:
          $ref: '#/components/schemas/ApiCompositeValueDTOString'
        sshEnabled:
          $ref: '#/components/schemas/ApiCompositeValueDTOBoolean'
        statusChecksEnabled:
          $ref: '#/components/schemas/ApiCompositeValueDTOBoolean'
        token:
          $ref: '#/components/schemas/ApiCompositeValueDTOString'
        username:
          $ref: '#/components/schemas/ApiCompositeValueDTOString'
      type: object
    ApiCompositeValueDTOBoolean:
      properties:
        parentName:
          type: string
        parentValue:
          type: boolean
        value:
          type: boolean
      type: object
    ApiCompositeValueDTOString:
      properties:
        parentName:
          type: string
        parentValue:
          type: string
        value:
          type: string
      type: object
    ApiConditionFactReasonDTO:
      properties:
        reason:
          type: string
      type: object
    ApiConstraintFactDTO:
      properties:
        constraintId:
          type: string
        constraintName:
          type: string
        reasons:
          items:
            $ref: '#/components/schemas/ApiConditionFactReasonDTO'
          type: array
      type: object
    ApiConstraintViolationDTO:
      properties:
        constraintId:
          type: string
        constraintName:
          type: string
        reasons:
          items:
            $ref: '#/components/schemas/ApiConstraintViolationReasonDTO'
          type: array
      type: object
    ApiConstraintViolationReasonDTO:
      properties:
        reason:
          type: string
        reference:
          $ref: '#/components/schemas/TriggerReference'
      type: object
    ApiCrossStageViolationDTOV2:
      properties:
        applicationName:
          type: string
        applicationPublicId:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        constraintViolations:
          items:
            $ref: '#/components/schemas/ApiConstraintViolationDTO'
          type: array
        displayName:
          $ref: '#/components/schemas/ComponentDisplayName'
        filename:
          type: string
        fixTime:
          format: date-time
          type: string
        hash:
          type: string
        openTime:
          format: date-time
          type: string
        organizationName:
          type: string
        policyId:
          type: string
        policyName:
          type: string
        policyOwner:
          $ref: '#/components/schemas/PolicyOwner'
        policyThreatCategory:
          type: string
        policyViolationId:
          type: string
        stageData:
          additionalProperties:
            $ref: '#/components/schemas/StageData'
          type: object
        threatLevel:
          format: int32
          type: integer
      type: object
    ApiCrowdConfigurationDTO:
      properties:
        applicationName:
          type: string
        applicationPassword:
          items:
            type: string
          type: array
        serverUrl:
          type: string
      type: object
    ApiDataRetentionPoliciesDTO:
      properties:
        applicationReports:
          $ref: '#/components/schemas/ApiReportRetentionPoliciesDTO'
        successMetrics:
          $ref: '#/components/schemas/ApiSuccessMetricsRetentionPolicyDTO'
      type: object
    ApiDependencyDataDTO:
      properties:
        directDependency:
          type: boolean
        innerSource:
          type: boolean
        innerSourceData:
          items:
            $ref: '#/components/schemas/InnerSourceData'
          type: array
          uniqueItems: true
        parentComponentPurls:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    ApiDependencyTreeNodeDTO:
      properties:
        children:
          items:
            $ref: '#/components/schemas/ApiDependencyTreeNodeDTO'
          type: array
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        direct:
          type: boolean
        packageUrl:
          type: string
      type: object
    ApiDependencyTreeResponseDTO:
      properties:
        dependencyTree:
          $ref: '#/components/schemas/ApiDependencyTreeNodeDTO'
      type: object
    ApiEnhancedPolicyViolationDTOV2:
      properties:
        component:
          $ref: '#/components/schemas/ApiComponentDTOV2'
        constraintViolations:
          items:
            $ref: '#/components/schemas/ApiConstraintViolationDTO'
          type: array
        openTime:
          format: date-time
          type: string
        policyId:
          type: string
        policyName:
          type: string
        policyViolationId:
          type: string
        reportId:
          type: string
        reportUrl:
          type: string
        stageId:
          type: string
        threatLevel:
          format: int32
          type: integer
      type: object
    ApiEvaluationResultCounterDTO:
      properties:
        critical:
          format: int32
          type: integer
        moderate:
          format: int32
          type: integer
        severe:
          format: int32
          type: integer
      type: object
    ApiFirewallMetricsResultDTO:
      properties:
        firewallMetricsValue:
          format: int32
          type: integer
        latestUpdatedTime:
          format: date-time
          type: string
      type: object
    ApiFirewallQuarantineSummaryDTO:
      properties:
        quarantineEnabled:
          type: boolean
        quarantineEnabledRepositoryCount:
          format: int64
          type: integer
        quarantinedComponentCount:
          format: int64
          type: integer
        repositoryCount:
          format: int64
          type: integer
        totalComponentCount:
          format: int64
          type: integer
      type: object
    ApiFirewallReleaseQuarantineConfigDTO:
      properties:
        autoReleaseQuarantineEnabled:
          type: boolean
        id:
          type: string
        name:
          type: string
      type: object
    ApiFirewallReleaseQuarantineSummaryDTO:
      properties:
        autoReleaseQuarantineCountMTD:
          format: int64
          type: integer
        autoReleaseQuarantineCountYTD:
          format: int64
          type: integer
      type: object
    ApiGlobalInformationDTOV2:
      properties:
        dataVersionDate:
          type: string
      type: object
    ApiHashComponentIdentifierDTO:
      properties:
        comment:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        createTime:
          format: date-time
          type: string
        hash:
          type: string
        packageUrl:
          type: string
      type: object
    ApiHashComponentIdentifiersDTO:
      properties:
        componentClaims:
          items:
            $ref: '#/components/schemas/ApiHashComponentIdentifierDTO'
          type: array
      type: object
    ApiJiraConfigurationDTO:
      properties:
        customFields:
          additionalProperties:
            type: object
          type: object
        password:
          items:
            type: string
          type: array
        url:
          type: string
        username:
          type: string
      type: object
    ApiLabelDTO:
      properties:
        color:
          type: string
        description:
          type: string
        id:
          type: string
        label:
          type: string
        ownerId:
          type: string
        ownerType:
          type: string
      type: object
    ApiLicenseDTO:
      properties:
        licenseId:
          type: string
        licenseName:
          type: string
      type: object
    ApiLicenseDataDTO:
      properties:
        declaredLicenses:
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
          type: array
        effectiveLicenses:
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
          type: array
        observedLicenses:
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
          type: array
        overriddenLicenses:
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
          type: array
        status:
          type: string
      type: object
    ApiLicenseDataDTOV2:
      properties:
        declaredLicenses:
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
          type: array
        effectiveLicenseThreats:
          items:
            $ref: '#/components/schemas/ApiLicenseThreatDTOV2'
          type: array
        effectiveLicenses:
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
          type: array
        observedLicenses:
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
          type: array
        overriddenLicenses:
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
          type: array
        status:
          type: string
      type: object
    ApiLicenseLegalApplicationReportDTO:
      properties:
        components:
          items:
            $ref: '#/components/schemas/ApiLicenseLegalComponentDTO'
          type: array
        licenseLegalMetadata:
          items:
            $ref: '#/components/schemas/ApiLicenseLegalMetadataDTO'
          type: array
          uniqueItems: true
      type: object
    ApiLicenseLegalComponentDTO:
      properties:
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        displayName:
          type: string
        hash:
          type: string
        licenseLegalData:
          $ref: '#/components/schemas/ApiLicenseLegalDataDTO'
        packageUrl:
          type: string
        stageScans:
          items:
            $ref: '#/components/schemas/ApiLicenseLegalStageScanDTO'
          type: array
      type: object
    ApiLicenseLegalComponentReportDTO:
      properties:
        component:
          $ref: '#/components/schemas/ApiLicenseLegalComponentDTO'
        licenseLegalMetadata:
          items:
            $ref: '#/components/schemas/ApiLicenseLegalMetadataDTO'
          type: array
          uniqueItems: true
      type: object
    ApiLicenseLegalCopyrightDTO:
      properties:
        content:
          type: string
        id:
          type: string
        originalContentHash:
          type: string
        status:
          enum:
          - enabled
          - disabled
          type: string
      type: object
    ApiLicenseLegalDataDTO:
      properties:
        attributions:
          items:
            $ref: '#/components/schemas/ComponentObligationAttributionDTO'
          type: array
        componentCopyrightId:
          type: string
        componentCopyrightLastUpdatedAt:
          format: date-time
          type: string
        componentCopyrightLastUpdatedByUsername:
          type: string
        componentCopyrightScopeOwnerId:
          type: string
        componentLicensesId:
          type: string
        componentLicensesLastUpdatedAt:
          format: date-time
          type: string
        componentLicensesLastUpdatedByUsername:
          type: string
        componentLicensesScopeOwnerId:
          type: string
        componentNoticesId:
          type: string
        componentNoticesLastUpdatedAt:
          format: date-time
          type: string
        componentNoticesLastUpdatedByUsername:
          type: string
        componentNoticesScopeOwnerId:
          type: string
        copyrights:
          items:
            $ref: '#/components/schemas/ApiLicenseLegalCopyrightDTO'
          type: array
        declaredLicenses:
          items:
            type: string
          type: array
        effectiveLicenseStatus:
          type: string
        effectiveLicenses:
          items:
            type: string
          type: array
        highestEffectiveLicenseThreatGroup:
          $ref: '#/components/schemas/ApiLicenseThreatDTOV2'
        licenseFiles:
          items:
            $ref: '#/components/schemas/ApiLicenseLegalFileDTO'
          type: array
        noticeFiles:
          items:
            $ref: '#/components/schemas/ApiLicenseLegalFileDTO'
          type: array
        obligations:
          items:
            $ref: '#/components/schemas/ApiLicenseLegalObligationDTO'
          type: array
        observedLicenses:
          items:
            type: string
          type: array
        sourceLinks:
          items:
            $ref: '#/components/schemas/LegalSourceLinkDTO'
          type: array
          uniqueItems: true
      type: object
    ApiLicenseLegalFileDTO:
      properties:
        content:
          type: string
        id:
          type: string
        originalContentHash:
          type: string
        relPath:
          type: string
        status:
          enum:
          - enabled
          - disabled
          type: string
      type: object
    ApiLicenseLegalMetadataDTO:
      properties:
        isMulti:
          type: boolean
        licenseId:
          type: string
        licenseName:
          type: string
        licenseText:
          type: string
        obligations:
          items:
            $ref: '#/components/schemas/LicenseObligationDTO'
          type: array
          uniqueItems: true
        singleLicenseIds:
          items:
            type: string
          type: array
          uniqueItems: true
        threatGroup:
          $ref: '#/components/schemas/LicenseThreatGroupDTO'
      type: object
    ApiLicenseLegalObligationDTO:
      properties:
        comment:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        id:
          type: string
        lastUpdatedAt:
          format: date-time
          type: string
        lastUpdatedByUsername:
          type: string
        name:
          type: string
        ownerId:
          type: string
        packageUrl:
          type: string
        status:
          enum:
          - OPEN
          - IGNORED
          - FLAGGED
          - FULFILLED
          type: string
      type: object
    ApiLicenseLegalStageScanDTO:
      properties:
        scanDate:
          format: date-time
          type: string
        scanId:
          type: string
        stageName:
          type: string
      type: object
    ApiLicenseThreatDTOV2:
      properties:
        licenseThreatGroupCategory:
          type: string
        licenseThreatGroupLevel:
          format: int32
          type: integer
        licenseThreatGroupName:
          type: string
      type: object
    ApiMailConfigurationDTO:
      properties:
        hostname:
          type: string
        password:
          type: string
        passwordIsIncluded:
          type: boolean
        port:
          format: int32
          type: integer
        sslEnabled:
          type: boolean
        startTlsEnabled:
          type: boolean
        systemEmail:
          type: string
        username:
          type: string
      type: object
    ApiMatchStateSummaryDTOV2:
      properties:
        knownComponentCount:
          format: int32
          type: integer
        totalComponentCount:
          format: int32
          type: integer
      type: object
    ApiMemberDTO:
      properties:
        ownerId:
          type: string
        ownerType:
          type: string
        type:
          enum:
          - USER
          - GROUP
          type: string
        userOrGroupName:
          type: string
      type: object
    ApiMetricsReportingQueryDTOV2:
      properties:
        applicationIds:
          items:
            type: string
          type: array
          uniqueItems: true
        firstTimePeriod:
          type: string
        lastTimePeriod:
          type: string
        organizationIds:
          items:
            type: string
          type: array
          uniqueItems: true
        timePeriod:
          enum:
          - WEEK
          - MONTH
          type: string
      type: object
    ApiMoveApplicationResponseDTOV2:
      properties:
        errors:
          items:
            type: string
          type: array
        warnings:
          items:
            type: string
          type: array
      type: object
    ApiOrganizationDTO:
      properties:
        id:
          type: string
        name:
          type: string
        parentOrganizationId:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/ApiTagDTO'
          type: array
      type: object
    ApiOrganizationListDTO:
      properties:
        organizations:
          items:
            $ref: '#/components/schemas/ApiOrganizationDTO'
          type: array
      type: object
    ApiOwnerArtifactoryConnectionDTO:
      properties:
        artifactoryConnection:
          $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
        artifactoryConnectionStatus:
          $ref: '#/components/schemas/ApiArtifactoryConnectionStatusResponseDTO'
        ownerDTO:
          $ref: '#/components/schemas/ApiOwnerDTO'
      type: object
    ApiOwnerDTO:
      properties:
        ownerId:
          type: string
        ownerName:
          type: string
        ownerPublicId:
          type: string
        ownerType:
          type: string
      type: object
    ApiPolicyDTO:
      properties:
        id:
          type: string
        name:
          type: string
        ownerId:
          type: string
        ownerType:
          enum:
          - APPLICATION
          - ORGANIZATION
          type: string
        policyType:
          type: string
        threatLevel:
          format: int32
          type: integer
      type: object
    ApiPolicyListDTO:
      properties:
        policies:
          items:
            $ref: '#/components/schemas/ApiPolicyDTO'
          type: array
      type: object
    ApiPolicyViolationDTOV2:
      properties:
        constraintViolations:
          items:
            $ref: '#/components/schemas/ApiConstraintViolationDTO'
          type: array
        policyId:
          type: string
        policyName:
          type: string
        policyViolationId:
          type: string
        threatLevel:
          format: int32
          type: integer
      type: object
    ApiPolicyViolationDiffDTO:
      properties:
        addedViolations:
          items:
            $ref: '#/components/schemas/ApiPolicyViolationForDiffDTO'
          type: array
          uniqueItems: true
        application:
          $ref: '#/components/schemas/ApiApplicationDTO'
        diffTime:
          format: date-time
          type: string
        fromCommit:
          $ref: '#/components/schemas/ApiApplicationEvaluationCommitDTO'
        removedViolations:
          items:
            $ref: '#/components/schemas/ApiPolicyViolationForDiffDTO'
          type: array
          uniqueItems: true
        sameViolations:
          items:
            $ref: '#/components/schemas/ApiPolicyViolationForDiffDTO'
          type: array
          uniqueItems: true
        toCommit:
          $ref: '#/components/schemas/ApiApplicationEvaluationCommitDTO'
      type: object
    ApiPolicyViolationForDiffDTO:
      properties:
        component:
          $ref: '#/components/schemas/ApiComponentDTOV2'
        constraintViolations:
          items:
            $ref: '#/components/schemas/ApiConstraintViolationDTO'
          type: array
        policyId:
          type: string
        policyName:
          type: string
        policyViolationId:
          type: string
        threatLevel:
          format: int32
          type: integer
      type: object
    ApiPolicyViolationStageDTO:
      properties:
        componentPolicyViolations:
          items:
            $ref: '#/components/schemas/ApiComponentPolicyViolationDTO'
          type: array
        stageId:
          type: string
      type: object
    ApiPolicyWaiverDTO:
      properties:
        associatedPackageUrl:
          type: string
        comment:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        componentName:
          type: string
        componentUpgradeAvailable:
          type: boolean
        constraintFacts:
          items:
            $ref: '#/components/schemas/ConstraintFact'
          type: array
        constraintFactsJson:
          type: string
        createTime:
          format: date-time
          type: string
        creatorId:
          type: string
        creatorName:
          type: string
        displayName:
          $ref: '#/components/schemas/ComponentDisplayName'
        expiryTime:
          format: date-time
          type: string
        hash:
          type: string
        isObsolete:
          type: boolean
        matcherStrategy:
          enum:
          - DEFAULT
          - EXACT_COMPONENT
          - ALL_COMPONENTS
          - ALL_VERSIONS
          type: string
        policyId:
          type: string
        policyName:
          type: string
        policyViolationId:
          type: string
        policyWaiverId:
          type: string
        scopeOwnerId:
          type: string
        scopeOwnerName:
          type: string
        scopeOwnerType:
          type: string
        threatLevel:
          format: int32
          type: integer
        vulnerabilityId:
          type: string
      type: object
    ApiPolicyWaiversApplicableToViolationDTO:
      properties:
        activeWaivers:
          items:
            $ref: '#/components/schemas/ApiPolicyWaiverDTO'
          type: array
        expiredWaivers:
          items:
            $ref: '#/components/schemas/ApiPolicyWaiverDTO'
          type: array
      type: object
    ApiPromoteScanRequestDTOV2:
      properties:
        scanId:
          type: string
        sourceStageId:
          type: string
        targetStageId:
          type: string
      type: object
    ApiProxyServerConfigurationDTO:
      properties:
        excludeHosts:
          items:
            type: string
          type: array
        hostname:
          type: string
        password:
          type: string
        passwordIsIncluded:
          type: boolean
        port:
          format: int32
          type: integer
        username:
          type: string
      type: object
    ApiPullRequestResult:
      properties:
        exceptionThrown:
          type: boolean
        reasoning:
          type: string
        startTime:
          format: date-time
          type: string
        successful:
          type: boolean
        title:
          type: string
        totalTime:
          format: int64
          type: integer
      type: object
    ApiPullRequestResults:
      properties:
        results:
          items:
            $ref: '#/components/schemas/ApiPullRequestResult'
          type: array
      type: object
    ApiReportComponentDTOV2:
      properties:
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        dependencyData:
          $ref: '#/components/schemas/ApiDependencyDataDTO'
        displayName:
          type: string
        hash:
          type: string
        identificationSource:
          type: string
        licenseData:
          $ref: '#/components/schemas/ApiLicenseDataDTOV2'
        matchState:
          type: string
        packageUrl:
          type: string
        pathnames:
          items:
            type: string
          type: array
        proprietary:
          type: boolean
        securityData:
          $ref: '#/components/schemas/ApiSecurityDataDTO'
        sha256:
          type: string
        thirdParty:
          type: boolean
      type: object
    ApiReportComponentPolicyViolationsDTOV2:
      properties:
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        dependencyData:
          $ref: '#/components/schemas/ApiDependencyDataDTO'
        displayName:
          type: string
        hash:
          type: string
        matchState:
          type: string
        packageUrl:
          type: string
        pathnames:
          items:
            type: string
          type: array
        proprietary:
          type: boolean
        sha256:
          type: string
        thirdParty:
          type: boolean
        violations:
          items:
            $ref: '#/components/schemas/ApiReportPolicyViolationDTOV2'
          type: array
      type: object
    ApiReportConstraintConditionDTOV2:
      properties:
        conditionReason:
          type: string
        conditionSummary:
          type: string
      type: object
    ApiReportConstraintViolationDTOV2:
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/ApiReportConstraintConditionDTOV2'
          type: array
        constraintId:
          type: string
        constraintName:
          type: string
      type: object
    ApiReportHistoryDTO:
      properties:
        applicationId:
          type: string
        reports:
          items:
            $ref: '#/components/schemas/ApiReportResultsDTO'
          type: array
      type: object
    ApiReportPolicyDataDTOV2:
      properties:
        application:
          $ref: '#/components/schemas/ApiApplicationBaseDTO'
        commitHash:
          type: string
        components:
          items:
            $ref: '#/components/schemas/ApiReportComponentPolicyViolationsDTOV2'
          type: array
        counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
        initiator:
          type: string
        reportTime:
          format: date-time
          type: string
        reportTitle:
          type: string
      type: object
    ApiReportPolicyViolationDTOV2:
      properties:
        constraints:
          items:
            $ref: '#/components/schemas/ApiReportConstraintViolationDTOV2'
          type: array
        grandfathered:
          type: boolean
        legacyViolation:
          type: boolean
        policyId:
          type: string
        policyName:
          type: string
        policyThreatCategory:
          type: string
        policyThreatLevel:
          format: int32
          type: integer
        policyViolationId:
          type: string
        waived:
          type: boolean
      type: object
    ApiReportRawDataDTOV2:
      properties:
        components:
          items:
            $ref: '#/components/schemas/ApiReportComponentDTOV2'
          type: array
        globalInformation:
          $ref: '#/components/schemas/ApiGlobalInformationDTOV2'
        matchSummary:
          $ref: '#/components/schemas/ApiMatchStateSummaryDTOV2'
      type: object
    ApiReportResultsDTO:
      properties:
        applicationId:
          type: string
        commitHash:
          type: string
        embeddableReportHtmlUrl:
          type: string
        evaluationDate:
          format: date-time
          type: string
        isForMonitoring:
          type: boolean
        isReevaluation:
          type: boolean
        latestReportHtmlUrl:
          type: string
        policyEvaluationId:
          type: string
        policyEvaluationResult:
          $ref: '#/components/schemas/PolicyEvaluationResult'
        reportDataUrl:
          type: string
        reportHtmlUrl:
          type: string
        reportPdfUrl:
          type: string
        scanId:
          type: string
        scanTriggerType:
          type: string
        stage:
          type: string
      type: object
    ApiReportRetentionPoliciesDTO:
      properties:
        stages:
          additionalProperties:
            $ref: '#/components/schemas/ApiReportRetentionPolicyDTO'
          type: object
      type: object
    ApiReportRetentionPolicyDTO:
      properties:
        enablePurging:
          type: boolean
        inheritPolicy:
          type: boolean
        maxAge:
          type: string
        maxCount:
          format: int32
          type: integer
      type: object
    ApiRepositoryComponentDTO:
      properties:
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        displayName:
          type: string
        hash:
          type: string
        packageUrl:
          type: string
        quarantineId:
          type: string
        quarantineReleaseTime:
          format: date-time
          type: string
        quarantineTime:
          format: date-time
          type: string
        sha256:
          type: string
        thirdParty:
          type: boolean
      type: object
    ApiRepositoryComponentEvaluationRequest:
      properties:
        hash:
          type: string
        packageUrl:
          type: string
        pathname:
          type: string
      type: object
    ApiRepositoryComponentEvaluationRequestList:
      properties:
        components:
          items:
            $ref: '#/components/schemas/ApiRepositoryComponentEvaluationRequest'
          type: array
        format:
          type: string
      type: object
    ApiRepositoryComponentEvaluationResult:
      properties:
        catalogDate:
          format: date-time
          type: string
        component:
          $ref: '#/components/schemas/ApiRepositoryComponentEvaluationRequest'
        policyViolations:
          items:
            $ref: '#/components/schemas/ApiPolicyViolationDTOV2'
          type: array
        quarantineDate:
          format: date-time
          type: string
        quarantined:
          type: boolean
      type: object
    ApiRepositoryComponentEvaluationResultList:
      properties:
        repositoryId:
          type: string
        repositoryManagerId:
          type: string
        repositoryPublicId:
          type: string
        repositoryType:
          type: string
        results:
          items:
            $ref: '#/components/schemas/ApiRepositoryComponentEvaluationResult'
          type: array
      type: object
    ApiRepositoryComponentPath:
      properties:
        pathname:
          type: string
        quarantine:
          type: boolean
      type: object
    ApiRepositoryComponentPolicyViolationDTO:
      properties:
        component:
          $ref: '#/components/schemas/ApiRepositoryComponentDTO'
        policyViolations:
          items:
            $ref: '#/components/schemas/ApiPolicyViolationDTOV2'
          type: array
        waivedPolicyViolations:
          items:
            $ref: '#/components/schemas/ApiWaivedPolicyViolationDTO'
          type: array
      type: object
    ApiRepositoryComponentsInQuarantineDTO:
      properties:
        components:
          items:
            $ref: '#/components/schemas/ApiRepositoryComponentPolicyViolationDTO'
          type: array
        repository:
          $ref: '#/components/schemas/ApiRepositoryDTO'
      type: object
    ApiRepositoryDTO:
      properties:
        auditEnabled:
          type: boolean
        format:
          type: string
        namespaceConfusionProtectionEnabled:
          type: boolean
        policyCompliantComponentSelectionEnabled:
          type: boolean
        publicId:
          type: string
        quarantineEnabled:
          type: boolean
        repositoryId:
          type: string
        type:
          type: string
      type: object
    ApiRepositoryListDTO:
      properties:
        repositories:
          items:
            $ref: '#/components/schemas/ApiRepositoryDTO'
          type: array
      type: object
    ApiRepositoryManagerDTO:
      properties:
        id:
          type: string
        instanceId:
          type: string
        name:
          type: string
        productName:
          type: string
        productVersion:
          type: string
      type: object
    ApiRepositoryManagerListDTO:
      properties:
        repositoryManagers:
          items:
            $ref: '#/components/schemas/ApiRepositoryManagerDTO'
          type: array
      type: object
    ApiRepositoryPathResponseDTO:
      properties:
        pathVersions:
          items:
            $ref: '#/components/schemas/ApiRepositoryPathVersions'
          type: array
      type: object
    ApiRepositoryPathVersions:
      properties:
        repositoryComponentPaths:
          items:
            $ref: '#/components/schemas/ApiRepositoryComponentPath'
          type: array
        requestIndex:
          format: int32
          type: integer
      type: object
    ApiRepositoryWaiverDTO:
      properties:
        repository:
          $ref: '#/components/schemas/ApiRepositoryDTO'
        stages:
          items:
            $ref: '#/components/schemas/ApiPolicyViolationStageDTO'
          type: array
      type: object
    ApiRequestPolicyWaiverDTO:
      properties:
        addWaiverLink:
          type: string
        comment:
          type: string
        policyViolationLink:
          type: string
      type: object
    ApiReverseProxyAuthenticationConfigurationDTO:
      properties:
        csrfProtectionDisabled:
          type: boolean
        enabled:
          type: boolean
        logoutUrl:
          type: string
        usernameHeader:
          type: string
      type: object
    ApiRoleDTO:
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    ApiRoleListDTO:
      properties:
        roles:
          items:
            $ref: '#/components/schemas/ApiRoleDTO'
          type: array
      type: object
    ApiRoleMemberMappingDTO:
      properties:
        members:
          items:
            $ref: '#/components/schemas/ApiMemberDTO'
          type: array
        roleId:
          type: string
      type: object
    ApiRoleMemberMappingListDTO:
      properties:
        memberMappings:
          items:
            $ref: '#/components/schemas/ApiRoleMemberMappingDTO'
          type: array
      type: object
    ApiSamlConfigurationDTO:
      properties:
        emailAttributeName:
          type: string
        entityId:
          type: string
        firstNameAttributeName:
          type: string
        groupsAttributeName:
          type: string
        identityProviderName:
          type: string
        lastNameAttributeName:
          type: string
        usernameAttributeName:
          type: string
        validateAssertionSignature:
          type: boolean
        validateResponseSignature:
          type: boolean
      type: object
    ApiSamlConfigurationResponseDTO:
      properties:
        emailAttributeName:
          type: string
        entityId:
          type: string
        firstNameAttributeName:
          type: string
        groupsAttributeName:
          type: string
        identityProviderMetadataXml:
          type: string
        identityProviderName:
          type: string
        lastNameAttributeName:
          type: string
        usernameAttributeName:
          type: string
        validateAssertionSignature:
          type: boolean
        validateResponseSignature:
          type: boolean
      type: object
    ApiSearchCriteriaDTOV2:
      properties:
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        hash:
          type: string
        packageUrl:
          type: string
        stageId:
          type: string
      type: object
    ApiSearchResultDTOV2:
      properties:
        applicationId:
          type: string
        applicationName:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        dependencyData:
          $ref: '#/components/schemas/ApiDependencyDataDTO'
        hash:
          type: string
        packageUrl:
          type: string
        reportHtmlUrl:
          type: string
        reportUrl:
          type: string
        threatLevel:
          format: int32
          type: integer
      type: object
    ApiSearchResultsDTOV2:
      properties:
        criteria:
          $ref: '#/components/schemas/ApiSearchCriteriaDTOV2'
        results:
          items:
            $ref: '#/components/schemas/ApiSearchResultDTOV2'
          type: array
      type: object
    ApiSecurityDataDTO:
      properties:
        securityIssues:
          items:
            $ref: '#/components/schemas/ApiSecurityIssueDTO'
          type: array
      type: object
    ApiSecurityIssueAnalysisDTO:
      properties:
        detail:
          type: string
        justification:
          type: string
        response:
          type: string
        state:
          type: string
      type: object
    ApiSecurityIssueDTO:
      properties:
        analysis:
          $ref: '#/components/schemas/ApiSecurityIssueAnalysisDTO'
        cvssVector:
          type: string
        cvssVectorSource:
          type: string
        cwe:
          type: string
        reference:
          type: string
        severity:
          format: float
          type: number
        source:
          type: string
        status:
          type: string
        threatCategory:
          type: string
        url:
          type: string
      type: object
    ApiSecurityVulnerabilityOverrideDTOV2:
      properties:
        comment:
          type: string
        currentlyAffectedComponents:
          items:
            $ref: '#/components/schemas/ApiComponentDTOV2'
          type: array
        hash:
          type: string
        owner:
          $ref: '#/components/schemas/ApiOwnerDTO'
        referenceId:
          type: string
        securityOverrideId:
          type: string
        status:
          type: string
      type: object
    ApiSecurityVulnerabilityOverrideResponseDTOV2:
      properties:
        securityOverrides:
          items:
            $ref: '#/components/schemas/ApiSecurityVulnerabilityOverrideDTOV2'
          type: array
      type: object
    ApiSourceControlConfigurationDTO:
      properties:
        cloneDirectory:
          type: string
        commitEmail:
          type: string
        commitUsername:
          type: string
        defaultBranchMonitoringIntervalHours:
          format: int32
          type: integer
        defaultBranchMonitoringStartTime:
          type: string
        gitExecutable:
          type: string
        gitImplementation:
          enum:
          - native
          - java
          type: string
        gitTimeoutSeconds:
          format: int32
          type: integer
        prCommentPurgeWindow:
          format: int32
          type: integer
        prEventPurgeWindow:
          format: int32
          type: integer
        pullRequestMonitoringIntervalSeconds:
          format: int32
          type: integer
        useUsernameInRepositoryCloneUrl:
          type: boolean
      type: object
    ApiSourceControlDTO:
      properties:
        baseBranch:
          type: string
        commitStatusEnabled:
          type: boolean
        enablePullRequests:
          type: boolean
        enableStatusChecks:
          type: boolean
        id:
          type: string
        ownerId:
          type: string
        provider:
          type: string
        pullRequestCommentingEnabled:
          type: boolean
        remediationPullRequestsEnabled:
          type: boolean
        repositoryUrl:
          type: string
        sourceControlEvaluationsEnabled:
          type: boolean
        sourceControlScanTarget:
          type: string
        sshEnabled:
          type: boolean
        statusChecksEnabled:
          type: boolean
        token:
          type: string
        username:
          type: string
      type: object
    ApiSourceControlEvaluationRequestDTO:
      properties:
        branchName:
          type: string
        scanTargets:
          items:
            type: string
          type: array
        stageId:
          type: string
      type: object
    ApiSourceControlRepositoryUserDTO:
      properties:
        emailAndCommitDateMap:
          additionalProperties:
            items:
              format: date-time
              type: string
            type: array
          type: object
      type: object
    ApiStagePolicyViolationComponentDTO:
      properties:
        action:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        displayName:
          type: string
        hash:
          type: string
        packageUrl:
          type: string
        policyId:
          type: string
        policyName:
          type: string
        policyViolationId:
          type: string
        threatCategory:
          type: string
        threatLevel:
          format: int32
          type: integer
      type: object
    ApiStaleApplicationEvaluationDTO:
      properties:
        application:
          $ref: '#/components/schemas/ApiApplicationBaseDTO'
        stages:
          items:
            $ref: '#/components/schemas/ApiStaleEvaluationStageDTO'
          type: array
      type: object
    ApiStaleEvaluationStageDTO:
      properties:
        lastEvaluationDate:
          format: date-time
          type: string
        stageId:
          type: string
      type: object
    ApiStaleEvaluationsDTO:
      properties:
        applications:
          items:
            $ref: '#/components/schemas/ApiStaleApplicationEvaluationDTO'
          type: array
        repositories:
          items:
            $ref: '#/components/schemas/ApiStaleRepositoryEvaluationDTO'
          type: array
      type: object
    ApiStaleRepositoryEvaluationDTO:
      properties:
        repository:
          $ref: '#/components/schemas/ApiRepositoryDTO'
        stages:
          items:
            $ref: '#/components/schemas/ApiStaleEvaluationStageDTO'
          type: array
      type: object
    ApiStaleWaiverDTO:
      properties:
        comment:
          type: string
        constraintFacts:
          items:
            $ref: '#/components/schemas/ApiConstraintFactDTO'
          type: array
        createTime:
          format: date-time
          type: string
        creatorId:
          type: string
        creatorName:
          type: string
        expiryTime:
          format: date-time
          type: string
        policyId:
          type: string
        policyName:
          type: string
        scopeOwnerId:
          type: string
        scopeOwnerName:
          type: string
        scopeOwnerType:
          type: string
        staleEvaluations:
          $ref: '#/components/schemas/ApiStaleEvaluationsDTO'
        waiverId:
          type: string
      type: object
    ApiStaleWaiversResponseDTO:
      properties:
        staleWaivers:
          items:
            $ref: '#/components/schemas/ApiStaleWaiverDTO'
          type: array
      type: object
    ApiStatusDTO:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      type: object
    ApiSuccessMetricsRetentionPolicyDTO:
      properties:
        enablePurging:
          type: boolean
        inheritPolicy:
          type: boolean
        maxAge:
          type: string
      type: object
    ApiTagDTO:
      properties:
        color:
          enum:
          - white
          - grey
          - black
          - green
          - yellow
          - orange
          - red
          - blue
          - light-red
          - light-green
          - light-blue
          - light-purple
          - dark-red
          - dark-green
          - dark-blue
          - dark-purple
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    ApiThirdPartyScanResultDTO:
      properties:
        componentsAffected:
          $ref: '#/components/schemas/ApiEvaluationResultCounterDTO'
        embeddableReportHtmlUrl:
          type: string
        errorMessage:
          type: string
        grandfatheredPolicyViolations:
          format: int32
          type: integer
        isError:
          type: boolean
        legacyViolations:
          format: int32
          type: integer
        openPolicyViolations:
          $ref: '#/components/schemas/ApiEvaluationResultCounterDTO'
        policyAction:
          type: string
        reportDataUrl:
          type: string
        reportHtmlUrl:
          type: string
        reportPdfUrl:
          type: string
      type: object
    ApiThirdPartyScanTicketDTO:
      properties:
        statusUrl:
          type: string
    ApiUserDTO:
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        realm:
          type: string
        username:
          type: string
      type: object
    ApiUserListDTO:
      properties:
        users:
          items:
            $ref: '#/components/schemas/ApiUserDTO'
          type: array
      type: object
    ApiUserTokenDTO:
      properties:
        passCode:
          type: string
        realm:
          type: string
        userCode:
          type: string
        username:
          type: string
      type: object
    ApiUserTokenExistsDTO:
      properties:
        userTokenExists:
          type: boolean
      type: object
    ApiVersionChangeOptionDTO:
      properties:
        data:
          $ref: '#/components/schemas/ApiComponentChangeActionDTO'
        type:
          enum:
          - next-no-violations
          - next-non-failing
          - next-no-violations-with-dependencies
          - next-non-failing-with-dependencies
          type: string
      type: object
    ApiWaivedPolicyViolationDTO:
      properties:
        constraintViolations:
          items:
            $ref: '#/components/schemas/ApiConstraintViolationDTO'
          type: array
        policyId:
          type: string
        policyName:
          type: string
        policyViolationId:
          type: string
        policyWaiver:
          $ref: '#/components/schemas/ApiPolicyWaiverDTO'
        threatLevel:
          format: int32
          type: integer
      type: object
    ApiWaiverOptionsDTO:
      properties:
        applyToAllComponents:
          type: boolean
        comment:
          type: string
        expiryTime:
          format: date-time
          type: string
        matcherStrategy:
          enum:
          - DEFAULT
          - EXACT_COMPONENT
          - ALL_COMPONENTS
          - ALL_VERSIONS
          type: string
      type: object
    ApplicableContext:
      properties:
        children:
          items:
            $ref: '#/components/schemas/ApplicableContext'
          type: array
        id:
          type: string
        name:
          type: string
        type:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          type: string
      type: object
    ApplicableLabels:
      properties:
        labelsByOwner:
          items:
            $ref: '#/components/schemas/LabelsByOwner'
          type: array
      type: object
    ApplicableTagsDTO:
      properties:
        applicationCategoriesByOwner:
          items:
            $ref: '#/components/schemas/TagsByOwnerDTO'
          type: array
      type: object
    ApplicationTag:
      properties:
        applicationId:
          type: string
        id:
          type: string
        tagId:
          type: string
      type: object
    ApplicationTagsByOwnerDTO:
      properties:
        applicationTags:
          items:
            $ref: '#/components/schemas/ApplicationTag'
          type: array
        ownerId:
          type: string
        ownerName:
          type: string
        ownerType:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          type: string
      type: object
    AppliedTagsDTO:
      properties:
        applicationTagsByOwner:
          items:
            $ref: '#/components/schemas/ApplicationTagsByOwnerDTO'
          type: array
      type: object
    AttributionReportTemplateDTO:
      properties:
        documentTitle:
          type: string
        footer:
          type: string
        header:
          type: string
        id:
          type: string
        includeAppendix:
          type: boolean
        includeInnerSource:
          type: boolean
        includeSonatypeSpecialLicenses:
          type: boolean
        includeStandardLicenseTexts:
          type: boolean
        includeTableOfContents:
          type: boolean
        lastUpdatedAt:
          format: date-time
          type: string
        templateName:
          type: string
      type: object
    BodyPart:
      properties:
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        headers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        mediaType:
          properties:
            parameters:
              additionalProperties:
                type: string
              type: object
            subtype:
              type: string
            type:
              type: string
            wildcardSubtype:
              type: boolean
            wildcardType:
              type: boolean
          type: object
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        parameterizedHeaders:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
            type: array
          type: object
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
      type: object
    ComponentDisplayName:
      properties:
        name:
          type: string
        parts:
          items:
            $ref: '#/components/schemas/ComponentDisplayNamePart'
          type: array
      type: object
    ComponentDisplayNamePart:
      properties:
        field:
          type: string
        value:
          type: string
      type: object
    ComponentFact:
      properties:
        componentIdentifier:
          $ref: '#/components/schemas/ComponentIdentifier'
        constraintFacts:
          items:
            $ref: '#/components/schemas/ConstraintFact'
          type: array
        displayName:
          $ref: '#/components/schemas/ComponentDisplayName'
        hash:
          type: string
        pathnames:
          items:
            type: string
          type: array
      type: object
    ComponentIdentifier:
      properties:
        coordinates:
          additionalProperties:
            type: string
          type: object
        format:
          type: string
      type: object
    ComponentObligationAttributionDTO:
      properties:
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        content:
          type: string
        id:
          type: string
        lastUpdatedAt:
          format: date-time
          type: string
        lastUpdatedByUsername:
          type: string
        obligationName:
          type: string
        ownerId:
          type: string
        packageUrl:
          type: string
      type: object
    ConditionFact:
      properties:
        conditionIndex:
          format: int32
          type: integer
        conditionTypeId:
          type: string
        reason:
          type: string
        reference:
          $ref: '#/components/schemas/TriggerReference'
        summary:
          type: string
        triggerJson:
          type: string
      type: object
    ConfigurationValidationResult:
      properties:
        configurationComplete:
          $ref: '#/components/schemas/ValidationResult'
        repoPrivate:
          $ref: '#/components/schemas/ValidationResult'
        sshConfiguration:
          $ref: '#/components/schemas/ValidationResult'
        tokenPermissions:
          $ref: '#/components/schemas/ValidationResult'
      type: object
    ConstraintFact:
      properties:
        conditionFacts:
          items:
            $ref: '#/components/schemas/ConditionFact'
          type: array
        constraintId:
          type: string
        constraintName:
          type: string
        operatorName:
          type: string
      type: object
    ContentDisposition:
      properties:
        creationDate:
          format: date-time
          type: string
        fileName:
          type: string
        modificationDate:
          format: date-time
          type: string
        parameters:
          additionalProperties:
            type: string
          type: object
        readDate:
          format: date-time
          type: string
        size:
          format: int64
          type: integer
        type:
          type: string
      type: object
    CweId:
      properties:
        id:
          type: string
        uri:
          format: uri
          type: string
      type: object
    FormDataBodyPart:
      properties:
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        formDataContentDisposition:
          $ref: '#/components/schemas/FormDataContentDisposition'
        headers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        mediaType:
          properties:
            parameters:
              additionalProperties:
                type: string
              type: object
            subtype:
              type: string
            type:
              type: string
            wildcardSubtype:
              type: boolean
            wildcardType:
              type: boolean
          type: object
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        name:
          type: string
        parameterizedHeaders:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
            type: array
          type: object
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
        simple:
          type: boolean
        value:
          type: string
      type: object
    FormDataContentDisposition:
      properties:
        creationDate:
          format: date-time
          type: string
        fileName:
          type: string
        modificationDate:
          format: date-time
          type: string
        name:
          type: string
        parameters:
          additionalProperties:
            type: string
          type: object
        readDate:
          format: date-time
          type: string
        size:
          format: int64
          type: integer
        type:
          type: string
      type: object
    FormDataMultiPart:
      properties:
        bodyParts:
          items:
            $ref: '#/components/schemas/BodyPart'
          type: array
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        fields:
          additionalProperties:
            items:
              $ref: '#/components/schemas/FormDataBodyPart'
            type: array
          type: object
        headers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        mediaType:
          properties:
            parameters:
              additionalProperties:
                type: string
              type: object
            subtype:
              type: string
            type:
              type: string
            wildcardSubtype:
              type: boolean
            wildcardType:
              type: boolean
          type: object
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        parameterizedHeaders:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
            type: array
          type: object
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
      type: object
    GroupingByDTO:
      properties:
        additionalInfo:
          type: string
        groupBy:
          type: string
        groupIdentifier:
          enum:
          - itemType
          - organizationId
          - organizationName
          - applicationId
          - applicationName
          - applicationPublicId
          - policyEvaluationStage
          - reportId
          - componentHash
          - componentFormat
          - componentName
          - componentCoordinate
          - vulnerabilityId
          - vulnerabilitySeverity
          - vulnerabilityStatus
          - vulnerabilityDescription
          - applicationCategoryId
          - applicationCategoryName
          - applicationCategoryColor
          - applicationCategoryDescription
          - componentLabelId
          - componentLabelName
          - componentLabelColor
          - componentLabelDescription
          - policyId
          - policyName
          - policyThreatCategory
          - policyThreatLevel
          type: string
        searchResultItemDTOS:
          items:
            $ref: '#/components/schemas/SearchResultItemDTO'
          type: array
      type: object
    IdeUsersOverviewDTO:
      properties:
        userCount:
          format: int64
          type: integer
      type: object
    InnerSourceData:
      properties:
        innerSourceComponentPurl:
          type: string
        ownerApplicationId:
          type: string
        ownerApplicationName:
          type: string
      type: object
    JsonNode:
      type: object
    LabelsByOwner:
      properties:
        labels:
          items:
            $ref: '#/components/schemas/ApiLabelDTO'
          type: array
        ownerId:
          type: string
        ownerName:
          type: string
        ownerType:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          type: string
      type: object
    LegalSourceLinkDTO:
      properties:
        content:
          type: string
        id:
          type: string
        originalContent:
          type: string
        status:
          enum:
          - enabled
          - disabled
          type: string
      type: object
    LicenseObligationDTO:
      properties:
        name:
          type: string
        obligationTexts:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    LicenseThreatGroupDTO:
      properties:
        name:
          type: string
        threatLevel:
          format: int32
          type: integer
      type: object
    MessageBodyWorkers:
      type: object
    MultiPart:
      properties:
        bodyParts:
          items:
            $ref: '#/components/schemas/BodyPart'
          type: array
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        headers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        mediaType:
          properties:
            parameters:
              additionalProperties:
                type: string
              type: object
            subtype:
              type: string
            type:
              type: string
            wildcardSubtype:
              type: boolean
            wildcardType:
              type: boolean
          type: object
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        parameterizedHeaders:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
            type: array
          type: object
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
      type: object
    ParameterizedHeader:
      properties:
        parameters:
          additionalProperties:
            type: string
          type: object
        value:
          type: string
      type: object
    PolicyAlert:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
        trigger:
          $ref: '#/components/schemas/PolicyFact'
      type: object
    PolicyEvaluationResult:
      properties:
        affectedComponentCount:
          format: int32
          type: integer
        alerts:
          items:
            $ref: '#/components/schemas/PolicyAlert'
          type: array
        criticalComponentCount:
          format: int32
          type: integer
        criticalPolicyViolationCount:
          format: int32
          type: integer
        grandfatheredPolicyViolationCount:
          format: int32
          type: integer
        legacyViolationCount:
          format: int32
          type: integer
        moderateComponentCount:
          format: int32
          type: integer
        moderatePolicyViolationCount:
          format: int32
          type: integer
        severeComponentCount:
          format: int32
          type: integer
        severePolicyViolationCount:
          format: int32
          type: integer
        totalComponentCount:
          format: int32
          type: integer
      type: object
    PolicyFact:
      properties:
        componentFacts:
          items:
            $ref: '#/components/schemas/ComponentFact'
          type: array
        policyId:
          type: string
        policyName:
          type: string
        policyViolationId:
          type: string
        threatLevel:
          format: int32
          type: integer
      type: object
    PolicyOwner:
      properties:
        ownerId:
          type: string
        ownerName:
          type: string
        ownerPublicId:
          type: string
        ownerType:
          type: string
      type: object
    PolicyTag:
      properties:
        id:
          type: string
        policyId:
          type: string
        tagId:
          type: string
      type: object
    ReferenceLink:
      properties:
        referenceType:
          type: string
        url:
          type: string
      type: object
    RootCause:
      properties:
        listOfPaths:
          items:
            type: string
          type: array
        versionRange:
          type: string
      type: object
    SearchResultDTO:
      properties:
        groupingByDTOS:
          items:
            $ref: '#/components/schemas/GroupingByDTO'
          type: array
        isExactTotalNumberOfHits:
          type: boolean
        page:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        searchQuery:
          type: string
        totalNumberOfHits:
          format: int32
          type: integer
      type: object
    SearchResultItemDTO:
      properties:
        applicationCategoryColor:
          type: string
        applicationCategoryDescription:
          type: string
        applicationCategoryId:
          type: string
        applicationCategoryName:
          type: string
        applicationId:
          type: string
        applicationName:
          type: string
        applicationPublicId:
          type: string
        componentHash:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        componentLabelColor:
          type: string
        componentLabelDescription:
          type: string
        componentLabelId:
          type: string
        componentLabelName:
          type: string
        componentName:
          type: string
        itemType:
          type: string
        organizationId:
          type: string
        organizationName:
          type: string
        policyEvaluationStage:
          type: string
        policyId:
          type: string
        policyName:
          type: string
        policyThreatCategory:
          type: string
        policyThreatLevel:
          format: int32
          type: integer
        reportId:
          type: string
        resultIndex:
          format: int32
          type: integer
        vulnerabilityDescription:
          type: string
        vulnerabilityId:
          type: string
        vulnerabilityStatus:
          type: string
      type: object
    SecurityVulnerabilityCustomData:
      properties:
        cvssSeverity:
          format: float
          type: number
        cvssVector:
          type: string
        cweId:
          type: string
        remediation:
          type: string
      type: object
    SecurityVulnerabilityData:
      properties:
        advisories:
          items:
            $ref: '#/components/schemas/ReferenceLink'
          type: array
        categories:
          items:
            type: string
          type: array
        componentDetectionMarkdown:
          type: string
        componentExplanationMarkdown:
          type: string
        componentRecommendationMarkdown:
          type: string
        customData:
          $ref: '#/components/schemas/SecurityVulnerabilityCustomData'
        description:
          type: string
        detectionMarkdown:
          type: string
        explanationMarkdown:
          type: string
        identifier:
          type: string
        isAdvancedVulnerabilityDetection:
          type: boolean
        mainSeverity:
          $ref: '#/components/schemas/SecurityVulnerabilitySeverity'
        recommendationMarkdown:
          type: string
        researchType:
          enum:
          - FAST_TRACK
          - DEEP_DIVE
          type: string
        rootCauses:
          items:
            $ref: '#/components/schemas/RootCause'
          type: array
        severityScores:
          items:
            $ref: '#/components/schemas/SecurityVulnerabilitySeverity'
          type: array
        source:
          $ref: '#/components/schemas/VulnerabilitySource'
        vulnIds:
          items:
            type: string
          type: array
        vulnerabilityLink:
          format: uri
          type: string
        vulnerableVersionRanges:
          items:
            type: string
          type: array
        weakness:
          $ref: '#/components/schemas/SecurityVulnerabilityWeakness'
      type: object
    SecurityVulnerabilitySeverity:
      properties:
        score:
          format: float
          type: number
        source:
          type: string
        vector:
          type: string
      type: object
    SecurityVulnerabilityWeakness:
      properties:
        cweIds:
          items:
            $ref: '#/components/schemas/CweId'
          type: array
        cweSource:
          type: string
      type: object
    StageData:
      properties:
        actionTypeId:
          type: string
        mostRecentEvaluationTime:
          format: date-time
          type: string
        mostRecentScanId:
          type: string
      type: object
    SystemConfig:
      properties:
        baseUrl:
          nullable: true
          type: string
        forceBaseUrl:
          nullable: true
          type: boolean
    SystemConfigProperty:
      enum:
      - baseUrl
      - forceBaseUrl
      type: string
    TagsByOwnerDTO:
      properties:
        applicationCategories:
          items:
            $ref: '#/components/schemas/ApiApplicationCategoryDTO'
          type: array
        ownerId:
          type: string
        ownerName:
          type: string
        ownerType:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          type: string
      type: object
    TriggerReference:
      properties:
        type:
          enum:
          - SECURITY_VULNERABILITY_REFID
          type: string
        value:
          type: string
      type: object
    ValidationResult:
      properties:
        message:
          type: string
        valid:
          type: boolean
      type: object
    VulnerabilitySource:
      properties:
        longName:
          type: string
        shortName:
          type: string
      type: object
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
info:
  title: Sonatype Lifecycle Public REST API
  version: 1.170.0-01
openapi: 3.0.1
paths:
  /api/v2/applicationCategories/application:
    get:
      operationId: getTagsUsedByApplications
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiApplicationCategoryDTO'
                type: array
          description: default response
      tags:
      - Application Categories
  /api/v2/applicationCategories/application/{applicationPublicId}:
    get:
      operationId: getApplicationApplicableTags
      parameters:
      - in: path
        name: applicationPublicId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicableTagsDTO'
          description: default response
      tags:
      - Application Categories
  /api/v2/applicationCategories/application/{applicationPublicId}/applicable:
    get:
      operationId: getApplicableTagsByApplicationPublicId
      parameters:
      - in: path
        name: applicationPublicId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiApplicationCategoryDTO'
                type: array
          description: default response
      tags:
      - Application Categories
  /api/v2/applicationCategories/organization/{organizationId}:
    get:
      operationId: getTags
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiApplicationCategoryDTO'
                type: array
          description: default response
      tags:
      - Application Categories
    post:
      operationId: addTag
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiApplicationCategoryDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationCategoryDTO'
          description: default response
      tags:
      - Application Categories
    put:
      operationId: updateTag
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiApplicationCategoryDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationCategoryDTO'
          description: default response
      tags:
      - Application Categories
  /api/v2/applicationCategories/organization/{organizationId}/applicable:
    get:
      operationId: getApplicableTags
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicableTagsDTO'
          description: default response
      tags:
      - Application Categories
  /api/v2/applicationCategories/organization/{organizationId}/applied:
    get:
      operationId: getAppliedTags
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppliedTagsDTO'
          description: default response
      tags:
      - Application Categories
  /api/v2/applicationCategories/organization/{organizationId}/policy:
    get:
      operationId: getAppliedPolicyTags
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PolicyTag'
                type: array
          description: default response
      tags:
      - Application Categories
  /api/v2/applicationCategories/organization/{organizationId}/{tagId}:
    delete:
      operationId: deleteTag
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      - in: path
        name: tagId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Application Categories
  /api/v2/applications:
    get:
      operationId: getApplications
      parameters:
      - in: query
        name: publicId
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
      - in: query
        name: includeCategories
        schema:
          default: false
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationListDTO'
          description: default response
      tags:
      - Applications
    post:
      operationId: addApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiApplicationDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationDTO'
          description: default response
      tags:
      - Applications
  /api/v2/applications/organization/{organizationId}:
    get:
      operationId: getApplicationsByOrganizationId
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationListDTO'
          description: default response
      tags:
      - Applications
  /api/v2/applications/{applicationId}:
    delete:
      operationId: deleteApplication
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Applications
    get:
      operationId: getApplication
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationDTO'
          description: default response
      tags:
      - Applications
    put:
      operationId: updateApplication
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiApplicationDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationDTO'
          description: default response
      tags:
      - Applications
  /api/v2/applications/{applicationId}/move/organization/{organizationId}:
    post:
      operationId: moveApplication
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMoveApplicationResponseDTOV2'
          description: default response
      tags:
      - Applications
  /api/v2/applications/{applicationPublicId}/reports/policyViolations/diff:
    get:
      operationId: getPolicyViolationDiff
      parameters:
      - in: path
        name: applicationPublicId
        required: true
        schema:
          type: string
      - in: query
        name: fromCommit
        schema:
          type: string
      - in: query
        name: toCommit
        schema:
          type: string
      - in: query
        name: fromPolicyEvaluationId
        schema:
          type: string
      - in: query
        name: toPolicyEvaluationId
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPolicyViolationDiffDTO'
          description: default response
      tags:
      - Applications
  /api/v2/applications/{applicationPublicId}/reports/{scanId}:
    get:
      operationId: getData
      parameters:
      - in: path
        name: applicationPublicId
        required: true
        schema:
          type: string
      - in: path
        name: scanId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Applications
  /api/v2/applications/{applicationPublicId}/reports/{scanId}/dependencyTree:
    get:
      operationId: getDependencyTree
      parameters:
      - in: path
        name: applicationPublicId
        required: true
        schema:
          type: string
      - in: path
        name: scanId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDependencyTreeResponseDTO'
          description: default response
      tags:
      - Applications
  /api/v2/applications/{applicationPublicId}/reports/{scanId}/policy:
    get:
      operationId: getPolicyViolations_1
      parameters:
      - in: path
        name: applicationPublicId
        required: true
        schema:
          type: string
      - in: path
        name: scanId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReportPolicyDataDTOV2'
          description: default response
      tags:
      - Applications
  /api/v2/applications/{applicationPublicId}/reports/{scanId}/raw:
    get:
      operationId: getRawData
      parameters:
      - in: path
        name: applicationPublicId
        required: true
        schema:
          type: string
      - in: path
        name: scanId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReportRawDataDTOV2'
          description: default response
      tags:
      - Applications
  /api/v2/applications/{sourceApplicationId}/clone:
    post:
      operationId: cloneApplication
      parameters:
      - in: path
        name: sourceApplicationId
        required: true
        schema:
          type: string
      - in: query
        name: clonedApplicationName
        schema:
          type: string
      - in: query
        name: clonedApplicationPublicId
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationDTO'
          description: default response
      tags:
      - Applications
  /api/v2/claim/components:
    get:
      operationId: getAll
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHashComponentIdentifiersDTO'
          description: default response
      tags:
      - Claim
    post:
      operationId: set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHashComponentIdentifierDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHashComponentIdentifierDTO'
          description: default response
      tags:
      - Claim
  /api/v2/claim/components/{hash}:
    delete:
      operationId: delete
      parameters:
      - in: path
        name: hash
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Claim
    get:
      operationId: get
      parameters:
      - in: path
        name: hash
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHashComponentIdentifierDTO'
          description: default response
      tags:
      - Claim
  /api/v2/components/details:
    post:
      operationId: getComponentDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiComponentDetailsRequestDTOV2'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentDetailsResultDTOV2'
          description: default response
      tags:
      - Components
  /api/v2/components/remediation/{ownerType}/{ownerId}:
    post:
      operationId: getSuggestedRemediationForComponent
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization|repository
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: query
        name: stageId
        schema:
          type: string
      - in: query
        name: identificationSource
        schema:
          type: string
      - in: query
        name: scanId
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiComponentDTOV2'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentRemediationDTO'
          description: default response
      tags:
      - Components
  /api/v2/components/versions:
    post:
      operationId: getComponentVersions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiComponentOrPurlIdentifierDTOV2'
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: default response
      tags:
      - Components
  /api/v2/components/{componentHash}/labels/{labelName}/{ownerType}s/{internalOwnerId}:
    delete:
      operationId: deleteComponentLabel
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      - in: path
        name: componentHash
        required: true
        schema:
          type: string
      - in: path
        name: labelName
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Components
    post:
      operationId: setComponentLabel
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      - in: path
        name: componentHash
        required: true
        schema:
          type: string
      - in: path
        name: labelName
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Components
  /api/v2/compositeSourceControl/{ownerType}/{internalOwnerId}:
    get:
      operationId: getCompositeSourceControlByOwner
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCompositeSourceControlDTO'
          description: default response
      tags:
      - Composite Source Control
  /api/v2/compositeSourceControlConfigValidator/application/{applicationId}:
    get:
      operationId: validateSourceControlConfig
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationValidationResult'
          description: default response
      tags:
      - Composite Source Control Config Validator
  /api/v2/config:
    delete:
      operationId: deleteConfiguration
      parameters:
      - in: query
        name: property
        schema:
          items:
            $ref: '#/components/schemas/SystemConfigProperty'
          type: array
          uniqueItems: true
      responses:
        204:
          content: {}
          description: System Configuration removed
      tags:
      - Config
    get:
      operationId: getConfiguration
      parameters:
      - in: query
        name: property
        schema:
          items:
            $ref: '#/components/schemas/SystemConfigProperty'
          type: array
          uniqueItems: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfig'
          description: System Configuration retrieved
      tags:
      - Config
    put:
      operationId: setConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemConfig'
      responses:
        204:
          content: {}
          description: System Configuration updated
      tags:
      - Config
  /api/v2/config/artifactoryConnection/{ownerType}/{internalOwnerId}:
    get:
      operationId: getOwnerArtifactoryConnection
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      - in: query
        name: inherit
        schema:
          default: false
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiOwnerArtifactoryConnectionDTO'
          description: default response
      tags:
      - Config Artifactory Connection
    post:
      operationId: addArtifactoryConnection
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
          description: default response
      tags:
      - Config Artifactory Connection
    put:
      operationId: updateOwnerArtifactoryConnectionStatus
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiArtifactoryConnectionStatusRequestDTO'
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Config Artifactory Connection
  /api/v2/config/artifactoryConnection/{ownerType}/{internalOwnerId}/test:
    post:
      operationId: testArtifactoryConnection
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatusDTO'
          description: default response
      tags:
      - Config Artifactory Connection
  /api/v2/config/artifactoryConnection/{ownerType}/{internalOwnerId}/{artifactoryConnectionId}:
    delete:
      operationId: deleteArtifactoryConnection
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      - in: path
        name: artifactoryConnectionId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config Artifactory Connection
    get:
      operationId: getArtifactoryConnection
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      - in: path
        name: artifactoryConnectionId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
          description: default response
      tags:
      - Config Artifactory Connection
    put:
      operationId: updateArtifactoryConnection
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      - in: path
        name: artifactoryConnectionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
          description: default response
      tags:
      - Config Artifactory Connection
  /api/v2/config/artifactoryConnection/{ownerType}/{internalOwnerId}/{artifactoryConnectionId}/test:
    post:
      operationId: testArtifactoryConnection_1
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      - in: path
        name: artifactoryConnectionId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatusDTO'
          description: default response
      tags:
      - Config Artifactory Connection
  /api/v2/config/crowd:
    delete:
      operationId: deleteCrowdConfiguration
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config Crowd
    get:
      operationId: getCrowdConfiguration
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCrowdConfigurationDTO'
          description: default response
      tags:
      - Config Crowd
    put:
      operationId: insertOrUpdateCrowdConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCrowdConfigurationDTO'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config Crowd
  /api/v2/config/crowd/test:
    post:
      operationId: testCrowdConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCrowdConfigurationDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatusDTO'
          description: default response
      tags:
      - Config Crowd
  /api/v2/config/features/{feature}:
    delete:
      operationId: disableFeature
      parameters:
      - in: path
        name: feature
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config
    post:
      operationId: enabledFeature
      parameters:
      - in: path
        name: feature
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config
  /api/v2/config/httpProxyServer:
    delete:
      operationId: deleteConfiguration_3
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config Proxy Server
    get:
      operationId: getConfiguration_3
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiProxyServerConfigurationDTO'
          description: default response
      tags:
      - Config Proxy Server
    put:
      operationId: setConfiguration_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiProxyServerConfigurationDTO'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config Proxy Server
  /api/v2/config/jira:
    delete:
      operationId: deleteConfiguration_1
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config JIRA
    get:
      operationId: getConfiguration_1
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiJiraConfigurationDTO'
          description: default response
      tags:
      - Config JIRA
    put:
      operationId: setConfiguration_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config JIRA
  /api/v2/config/mail:
    delete:
      operationId: deleteConfiguration_2
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config Mail
    get:
      operationId: getConfiguration_2
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMailConfigurationDTO'
          description: default response
      tags:
      - Config Mail
    put:
      operationId: setConfiguration_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiMailConfigurationDTO'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config Mail
  /api/v2/config/mail/test/{recipientEmail}:
    post:
      operationId: testConfiguration
      parameters:
      - in: path
        name: recipientEmail
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiMailConfigurationDTO'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config Mail
  /api/v2/config/reverseProxyAuthentication:
    delete:
      operationId: deleteConfiguration_4
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config Reverse Proxy Authentication
    get:
      operationId: getConfiguration_4
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReverseProxyAuthenticationConfigurationDTO'
          description: default response
      tags:
      - Config Reverse Proxy Authentication
    put:
      operationId: setConfiguration_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiReverseProxyAuthenticationConfigurationDTO'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config Reverse Proxy Authentication
  /api/v2/config/saml:
    delete:
      operationId: deleteSamlConfiguration
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config SAML
    get:
      operationId: getSamlConfiguration
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSamlConfigurationResponseDTO'
          description: default response
      tags:
      - Config SAML
  /api/v2/config/saml/metadata:
    get:
      operationId: getMetadata
      responses:
        default:
          content:
            application/xml:
              schema:
                type: string
          description: default response
      tags:
      - Config SAML
  /api/v2/config/sourceControl:
    delete:
      operationId: deleteConfiguration_5
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config Source Control
    get:
      operationId: getConfiguration_5
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSourceControlConfigurationDTO'
          description: default response
      tags:
      - Config Source Control
    put:
      operationId: setConfiguration_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Config Source Control
  /api/v2/cycloneDx/{applicationId}/reports/{reportId}:
    get:
      deprecated: true
      operationId: getByReportId
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: reportId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/xml: {}
          description: default response
      tags:
      - Cyclone Dx
  /api/v2/cycloneDx/{applicationId}/stages/{stageId}:
    get:
      deprecated: true
      operationId: getLatest
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: stageId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/xml: {}
          description: default response
      tags:
      - Cyclone Dx
  /api/v2/cycloneDx/{cdxVersion}/{applicationId}/reports/{reportId}:
    get:
      operationId: getByReportId_1
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: reportId
        required: true
        schema:
          type: string
      - in: path
        name: cdxVersion
        required: true
        schema:
          pattern: 1.1|1.2|1.3|1.4|1.5
          type: string
      responses:
        default:
          content:
            application/json: {}
            application/xml: {}
          description: default response
      tags:
      - Cyclone Dx
  /api/v2/cycloneDx/{cdxVersion}/{applicationId}/stages/{stageId}:
    get:
      operationId: getLatest_1
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: stageId
        required: true
        schema:
          type: string
      - in: path
        name: cdxVersion
        required: true
        schema:
          pattern: 1.1|1.2|1.3|1.4|1.5
          type: string
      responses:
        default:
          content:
            application/json: {}
            application/xml: {}
          description: default response
      tags:
      - Cyclone Dx
  /api/v2/dataRetentionPolicies/organizations/{organizationId}:
    get:
      operationId: getDataRetentionPolicies
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataRetentionPoliciesDTO'
          description: default response
      tags:
      - Data Retention Policies
    put:
      operationId: setDataRetentionPolicies
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDataRetentionPoliciesDTO'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Data Retention Policies
  /api/v2/dataRetentionPolicies/organizations/{organizationId}/parent:
    get:
      operationId: getParentDataRetentionPolicies
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataRetentionPoliciesDTO'
          description: default response
      tags:
      - Data Retention Policies
  /api/v2/endpoints/{apiType}:
    get:
      operationId: getOpenAPI
      parameters:
      - in: path
        name: apiType
        required: true
        schema:
          enum:
          - public
          - experimental
          pattern: public|experimental
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
          description: default response
      tags:
      - Endpoints
  /api/v2/evaluation/applications/{applicationId}:
    post:
      operationId: evaluateComponents_1
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiComponentEvaluationRequestDTOV2'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentEvaluationTicketDTOV2'
          description: default response
      tags:
      - Evaluation
  /api/v2/evaluation/applications/{applicationId}/promoteScan:
    post:
      operationId: promoteScan
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPromoteScanRequestDTOV2'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationEvaluationStatusDTOV2'
          description: default response
      tags:
      - Evaluation
  /api/v2/evaluation/applications/{applicationId}/results/{resultId}:
    get:
      operationId: getComponentEvaluation
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: resultId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentEvaluationResultDTOV2'
          description: default response
      tags:
      - Evaluation
  /api/v2/evaluation/applications/{applicationId}/sourceControlEvaluation:
    post:
      operationId: evaluateSourceControl
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSourceControlEvaluationRequestDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationEvaluationStatusDTOV2'
          description: default response
      tags:
      - Evaluation
  /api/v2/evaluation/applications/{applicationId}/status/{statusId}:
    get:
      operationId: getApplicationEvaluationStatus
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: statusId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationEvaluationResultDTOV2'
          description: default response
      tags:
      - Evaluation
  /api/v2/firewall/components/autoReleasedFromQuarantine:
    get:
      operationId: getUnquarantineList
      parameters:
      - in: query
        name: page
        schema:
          default: 1
          format: int32
          type: integer
      - in: query
        name: pageSize
        schema:
          default: 10
          format: int32
          type: integer
      - in: query
        name: policyId
        schema:
          type: string
      - in: query
        name: componentName
        schema:
          type: string
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: asc
        schema:
          default: true
          type: boolean
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Firewall
  /api/v2/firewall/components/quarantined:
    get:
      operationId: getQuarantineList
      parameters:
      - in: query
        name: page
        schema:
          default: 1
          format: int32
          type: integer
      - in: query
        name: pageSize
        schema:
          default: 10
          format: int32
          type: integer
      - in: query
        name: policyId
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
      - in: query
        name: componentName
        schema:
          type: string
      - in: query
        name: sortBy
        schema:
          type: string
      - in: query
        name: asc
        schema:
          default: true
          type: boolean
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Firewall
  /api/v2/firewall/components/{repositoryManagerId}/{repositoryId}/evaluate:
    post:
      operationId: evaluateComponents
      parameters:
      - in: path
        name: repositoryManagerId
        required: true
        schema:
          type: string
      - in: path
        name: repositoryId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRepositoryComponentEvaluationRequestList'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRepositoryComponentEvaluationResultList'
          description: default response
      tags:
      - Firewall
  /api/v2/firewall/metrics/embedded:
    get:
      operationId: getFirewallMetrics
      responses:
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/ApiFirewallMetricsResultDTO'
                type: object
          description: default response
      tags:
      - Firewall
  /api/v2/firewall/quarantine/summary:
    get:
      operationId: getQuarantineSummary
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFirewallQuarantineSummaryDTO'
          description: default response
      tags:
      - Firewall
  /api/v2/firewall/quarantinedComponentView/configuration/anonymousAccess:
    get:
      operationId: getQuarantinedComponentViewAnonymousAccess
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Firewall
  /api/v2/firewall/quarantinedComponentView/configuration/anonymousAccess/{enabled}:
    put:
      operationId: setQuarantinedComponentViewAnonymousAccess
      parameters:
      - in: path
        name: enabled
        required: true
        schema:
          type: boolean
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Firewall
  /api/v2/firewall/releaseQuarantine/configuration:
    get:
      operationId: getFirewallAutoUnquarantineConfig
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiFirewallReleaseQuarantineConfigDTO'
                type: array
          description: default response
      tags:
      - Firewall
    put:
      operationId: setFirewallAutoUnquarantineConfig
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ApiFirewallReleaseQuarantineConfigDTO'
              type: array
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiFirewallReleaseQuarantineConfigDTO'
                type: array
          description: default response
      tags:
      - Firewall
  /api/v2/firewall/releaseQuarantine/summary:
    get:
      operationId: getFirewallUnquarantineSummary
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFirewallReleaseQuarantineSummaryDTO'
          description: default response
      tags:
      - Firewall
  /api/v2/firewall/repositories/configuration/{repositoryManagerId}:
    get:
      operationId: getConfiguredRepositories
      parameters:
      - in: path
        name: repositoryManagerId
        required: true
        schema:
          type: string
      - in: query
        name: sinceUtcTimestamp
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRepositoryListDTO'
          description: default response
      tags:
      - Firewall
    post:
      operationId: configureRepositories
      parameters:
      - in: path
        name: repositoryManagerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRepositoryListDTO'
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Firewall
  /api/v2/firewall/repositoryManagers:
    get:
      operationId: getRepositoryManagers
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRepositoryManagerListDTO'
          description: default response
      tags:
      - Firewall
    post:
      operationId: addRepositoryManager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRepositoryManagerDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRepositoryManagerDTO'
          description: default response
      tags:
      - Firewall
  /api/v2/firewall/repositoryManagers/{repositoryManagerId}:
    delete:
      operationId: deleteRepositoryManager
      parameters:
      - in: path
        name: repositoryManagerId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Firewall
    get:
      operationId: getRepositoryManager
      parameters:
      - in: path
        name: repositoryManagerId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRepositoryManagerDTO'
          description: default response
      tags:
      - Firewall
  /api/v2/labels/{ownerType}/{ownerId}:
    get:
      operationId: getLabels
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization|repository|repository_manager|repository_container
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: query
        name: inherit
        schema:
          default: false
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiLabelDTO'
                type: array
          description: default response
      tags:
      - Labels
    post:
      operationId: addLabel
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization|repository|repository_manager|repository_container
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiLabelDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLabelDTO'
          description: default response
      tags:
      - Labels
    put:
      operationId: updateLabel
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization|repository|repository_manager|repository_container
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiLabelDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLabelDTO'
          description: default response
      tags:
      - Labels
  /api/v2/labels/{ownerType}/{ownerId}/applicable:
    get:
      operationId: getApplicableLabels
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization|repository|repository_manager|repository_container
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicableLabels'
          description: default response
      tags:
      - Labels
  /api/v2/labels/{ownerType}/{ownerId}/applicable/context/{labelId}:
    get:
      operationId: getApplicableContexts
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization|repository|repository_manager|repository_container
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: path
        name: labelId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicableContext'
          description: default response
      tags:
      - Labels
  /api/v2/labels/{ownerType}/{ownerId}/{labelId}:
    delete:
      operationId: deleteLabel
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization|repository|repository_manager|repository_container
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: path
        name: labelId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Labels
  /api/v2/licenseLegalMetadata/application/{applicationId}:
    get:
      operationId: getLicenseLegalApplicationReport
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLicenseLegalApplicationReportDTO'
          description: default response
      tags:
      - License Legal Metadata
  /api/v2/licenseLegalMetadata/application/{applicationId}/stage/{stageId}:
    get:
      operationId: getLicenseLegalApplicationReport_1
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: stageId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLicenseLegalApplicationReportDTO'
          description: default response
      tags:
      - License Legal Metadata
  /api/v2/licenseLegalMetadata/application/{applicationId}/stage/{stageId}/report:
    get:
      operationId: getLicenseLegalApplicationHTMLReport
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: stageId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
      tags:
      - License Legal Metadata
    post:
      operationId: getLicenseLegalCustomApplicationHTMLReport
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: stageId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/FormDataMultiPart'
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
      tags:
      - License Legal Metadata
  /api/v2/licenseLegalMetadata/application/{applicationId}/stage/{stageId}/report/templateId/{templateId}:
    post:
      operationId: getLicenseLegalCustomApplicationHTMLReport_1
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: stageId
        required: true
        schema:
          type: string
      - in: path
        name: templateId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
      tags:
      - License Legal Metadata
  /api/v2/licenseLegalMetadata/multiApplication/activeUserFilter/report/templateId/{templateId}:
    post:
      operationId: getLicenseLegalMultiApplicationReportFromActiveUserFilter
      parameters:
      - in: path
        name: templateId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
      tags:
      - License Legal Metadata
  /api/v2/licenseLegalMetadata/multiApplication/report:
    post:
      operationId: getLicenseLegalMultiApplicationHTMLReport
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
      tags:
      - License Legal Metadata
  /api/v2/licenseLegalMetadata/multiApplication/report/templateId/{templateId}:
    post:
      operationId: getLicenseLegalCustomMultiApplicationHTMLReport_1
      parameters:
      - in: path
        name: templateId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
      tags:
      - License Legal Metadata
  /api/v2/licenseLegalMetadata/report-template:
    get:
      operationId: getAllAttributionReportTemplates
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttributionReportTemplateDTO'
                type: array
          description: default response
      tags:
      - License Legal Metadata
    post:
      operationId: saveAttributionReportTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributionReportTemplateDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributionReportTemplateDTO'
          description: default response
      tags:
      - License Legal Metadata
  /api/v2/licenseLegalMetadata/report-template/{id}:
    delete:
      operationId: deleteAttributionReportTemplate
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - License Legal Metadata
    get:
      operationId: getAttributionReportTemplateById
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributionReportTemplateDTO'
          description: default response
      tags:
      - License Legal Metadata
  /api/v2/licenseLegalMetadata/{ownerType}/{ownerId}/component:
    get:
      operationId: getLicenseLegalComponentReport
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: query
        name: componentIdentifier
        schema:
          $ref: '#/components/schemas/ComponentIdentifier'
      - in: query
        name: packageUrl
        schema:
          type: string
      - in: query
        name: hash
        schema:
          type: string
      - in: query
        name: identificationSource
        schema:
          type: string
      - in: query
        name: scanId
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLicenseLegalComponentReportDTO'
          description: default response
      tags:
      - License Legal Metadata
  /api/v2/organizations:
    get:
      operationId: getOrganizations
      parameters:
      - in: query
        name: organizationName
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiOrganizationListDTO'
          description: default response
      tags:
      - Organizations
    post:
      operationId: addOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiOrganizationDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiOrganizationDTO'
          description: default response
      tags:
      - Organizations
  /api/v2/organizations/{organizationId}:
    get:
      operationId: getOrganization
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiOrganizationDTO'
          description: default response
      tags:
      - Organizations
  /api/v2/organizations/{organizationId}/move/destination/{destinationId}:
    put:
      operationId: moveOrganization
      parameters:
      - in: path
        name: organizationId
        required: true
        schema:
          type: string
      - in: path
        name: destinationId
        required: true
        schema:
          type: string
      - in: query
        name: failEarlyOnError
        schema:
          default: false
          type: boolean
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organizations
  /api/v2/policies:
    get:
      operationId: getPolicies
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPolicyListDTO'
          description: default response
      tags:
      - Policies
  /api/v2/policyViolations:
    get:
      operationId: getPolicyViolations
      parameters:
      - in: query
        name: p
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
      - in: query
        name: openTimeAfter
        schema:
          type: string
      - in: query
        name: openTimeBefore
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationViolationListDTOV2'
          description: default response
      tags:
      - Policy Violations
  /api/v2/policyViolations/crossStage:
    get:
      operationId: getCrossStagePolicyViolationByConstituentId
      parameters:
      - in: query
        name: constituentId
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCrossStageViolationDTOV2'
          description: default response
      tags:
      - Policy Violations
  /api/v2/policyViolations/crossStage/{violationId}:
    get:
      operationId: getCrossStagePolicyViolationById
      parameters:
      - in: path
        name: violationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCrossStageViolationDTOV2'
          description: default response
      tags:
      - Policy Violations
  /api/v2/policyViolations/transitive/{ownerType}/{ownerId}/stages/{stageId}:
    get:
      operationId: getTransitivePolicyViolationsByOwnerStageComponent
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: path
        name: stageId
        required: true
        schema:
          type: string
      - in: query
        name: componentIdentifier
        schema:
          $ref: '#/components/schemas/ComponentIdentifier'
      - in: query
        name: packageUrl
        schema:
          type: string
      - in: query
        name: hash
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentTransitivePolicyViolationsDTO'
          description: default response
      tags:
      - Policy Violations
  /api/v2/policyViolations/transitive/{ownerType}/{ownerId}/{scanId}:
    get:
      operationId: getTransitivePolicyViolationsByAppScanComponent
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: path
        name: scanId
        required: true
        schema:
          type: string
      - in: query
        name: componentIdentifier
        schema:
          $ref: '#/components/schemas/ComponentIdentifier'
      - in: query
        name: packageUrl
        schema:
          type: string
      - in: query
        name: hash
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentTransitivePolicyViolationsDTO'
          description: default response
      tags:
      - Policy Violations
  /api/v2/policyViolations/{violationId}/applicableWaivers:
    get:
      operationId: getApplicableWaivers
      parameters:
      - in: path
        name: violationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPolicyWaiversApplicableToViolationDTO'
          description: default response
      tags:
      - Policy Violations
  /api/v2/policyWaiver/{policyViolationId}/{ownerType}:
    post:
      deprecated: true
      operationId: addPolicyWaiver
      parameters:
      - in: path
        name: policyViolationId
        required: true
        schema:
          type: string
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Policy Waiver
  /api/v2/policyWaivers/transitive/{ownerType}/{ownerId}/stages/{stageId}:
    post:
      operationId: addWaiverToTransitivePolicyViolationsByOwnerStageComponent
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: path
        name: stageId
        required: true
        schema:
          type: string
      - in: query
        name: componentIdentifier
        schema:
          $ref: '#/components/schemas/ComponentIdentifier'
      - in: query
        name: packageUrl
        schema:
          type: string
      - in: query
        name: hash
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiWaiverOptionsDTO'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Policy Waivers
  /api/v2/policyWaivers/transitive/{ownerType}/{ownerId}/{scanId}:
    get:
      operationId: getTransitivePolicyWaiversByAppScanComponent
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: path
        name: scanId
        required: true
        schema:
          type: string
      - in: query
        name: componentIdentifier
        schema:
          $ref: '#/components/schemas/ComponentIdentifier'
      - in: query
        name: packageUrl
        schema:
          type: string
      - in: query
        name: hash
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentPolicyWaiversDTO'
          description: default response
      tags:
      - Policy Waivers
    post:
      operationId: addWaiverToTransitivePolicyViolationsByAppScanComponent
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: path
        name: scanId
        required: true
        schema:
          type: string
      - in: query
        name: componentIdentifier
        schema:
          $ref: '#/components/schemas/ComponentIdentifier'
      - in: query
        name: packageUrl
        schema:
          type: string
      - in: query
        name: hash
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiWaiverOptionsDTO'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Policy Waivers
  /api/v2/policyWaivers/waiverRequests/{policyViolationId}:
    post:
      operationId: requestPolicyWaiver
      parameters:
      - in: path
        name: policyViolationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiRequestPolicyWaiverDTO'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Policy Waivers
  /api/v2/policyWaivers/{ownerType}/{ownerId}:
    get:
      operationId: getPolicyWaivers
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization|repository|repository_manager|repository_container
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiPolicyWaiverDTO'
                type: array
          description: default response
      tags:
      - Policy Waivers
  /api/v2/policyWaivers/{ownerType}/{ownerId}/{policyViolationId}:
    post:
      operationId: addPolicyWaiverByPolicyViolationId
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization|repository|repository_manager|repository_container
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: path
        name: policyViolationId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiWaiverOptionsDTO'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Policy Waivers
  /api/v2/policyWaivers/{ownerType}/{ownerId}/{policyWaiverId}:
    delete:
      operationId: deletePolicyWaiver
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization|repository|repository_manager|repository_container
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: path
        name: policyWaiverId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Policy Waivers
    get:
      operationId: getPolicyWaiver
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization|repository|repository_manager|repository_container
          type: string
      - in: path
        name: ownerId
        required: true
        schema:
          type: string
      - in: path
        name: policyWaiverId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPolicyWaiverDTO'
          description: default response
      tags:
      - Policy Waivers
  /api/v2/reports/applications:
    get:
      operationId: getAll_1
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiApplicationReportDTOV2'
                type: array
          description: default response
      tags:
      - Reports
  /api/v2/reports/applications/{applicationId}:
    get:
      operationId: getByApplicationId
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiApplicationReportDTOV2'
                type: array
          description: default response
      tags:
      - Reports
  /api/v2/reports/applications/{applicationId}/history:
    get:
      operationId: getReportHistoryForApplication
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: query
        name: stage
        schema:
          type: string
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReportHistoryDTO'
          description: default response
      tags:
      - Reports
  /api/v2/reports/components/quarantined:
    get:
      operationId: getComponentsInQuarantine
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentsInQuarantineDTO'
          description: default response
      tags:
      - Reports
  /api/v2/reports/components/waivers:
    get:
      operationId: getComponentsWithWaivers
      parameters:
      - in: query
        name: format
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentWaiversDTO'
          description: default response
      tags:
      - Reports
  /api/v2/reports/metrics:
    post:
      operationId: getMetrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiMetricsReportingQueryDTOV2'
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Reports
  /api/v2/reports/waivers/stale:
    get:
      operationId: getStaleWaivers
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStaleWaiversResponseDTO'
          description: default response
      tags:
      - Reports
  /api/v2/repositories/quarantine/{quarantineId}/release:
    post:
      operationId: releaseQuarantineWithoutReEval
      parameters:
      - in: path
        name: quarantineId
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentReleasedFromQuarantineDTO'
          description: default response
      tags:
      - Repositories
  /api/v2/repositories/{repositoryManagerInstanceId}/{repositoryPublicId}/components/quarantined/pathnames:
    post:
      operationId: getQuarantinedByPath
      parameters:
      - in: path
        name: repositoryManagerInstanceId
        required: true
        schema:
          type: string
      - in: path
        name: repositoryPublicId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRepositoryPathResponseDTO'
          description: default response
      tags:
      - Repositories
  /api/v2/roleMemberships/{ownerType}:
    get:
      operationId: getRoleMembershipsGlobalOrRepositoryContainer
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: global|repository_container
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleMemberMappingListDTO'
          description: default response
      tags:
      - Role Memberships
  /api/v2/roleMemberships/{ownerType}/role/{roleId}/{memberType}/{memberName}:
    delete:
      operationId: revokeRoleMembershipGlobalOrRepositoryContainer
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: global|repository_container
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: path
        name: memberType
        required: true
        schema:
          enum:
          - USER
          - GROUP
          pattern: user|group
          type: string
      - in: path
        name: memberName
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Role Memberships
    put:
      operationId: grantRoleMembershipGlobalOrRepositoryContainer
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: global|repository_container
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: path
        name: memberType
        required: true
        schema:
          enum:
          - USER
          - GROUP
          pattern: user|group
          type: string
      - in: path
        name: memberName
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Role Memberships
  /api/v2/roleMemberships/{ownerType}/{internalOwnerId}:
    get:
      operationId: getRoleMembershipsApplicationOrOrganization
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleMemberMappingListDTO'
          description: default response
      tags:
      - Role Memberships
  /api/v2/roleMemberships/{ownerType}/{internalOwnerId}/role/{roleId}/{memberType}/{memberName}:
    delete:
      operationId: revokeRoleMembershipApplicationOrOrganization
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: path
        name: memberType
        required: true
        schema:
          enum:
          - USER
          - GROUP
          pattern: user|group
          type: string
      - in: path
        name: memberName
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Role Memberships
    put:
      operationId: grantRoleMembershipApplicationOrOrganization
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: path
        name: memberType
        required: true
        schema:
          enum:
          - USER
          - GROUP
          pattern: user|group
          type: string
      - in: path
        name: memberName
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Role Memberships
  /api/v2/roles:
    get:
      operationId: getRoles
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleListDTO'
          description: default response
      tags:
      - Roles
  /api/v2/scan/applications/ideUser/overview:
    get:
      operationId: getIdeUsersOverview
      parameters:
      - in: query
        name: sinceUtcTimestamp
        schema:
          format: int64
          type: integer
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdeUsersOverviewDTO'
          description: default response
      tags:
      - Scan
  /api/v2/scan/applications/{applicationId}/sources/{source}:
    post:
      operationId: scanComponents
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: source
        required: true
        schema:
          type: string
      - in: query
        name: stageId
        schema:
          default: build
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/xml:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiThirdPartyScanTicketDTO'
          description: default response
      tags:
      - Scan
  /api/v2/scan/applications/{applicationId}/status/{scanRequestId}:
    get:
      operationId: getScanStatus
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: scanRequestId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiThirdPartyScanResultDTO'
          description: default response
      tags:
      - Scan
  /api/v2/search/advanced:
    get:
      operationId: searchIndex
      parameters:
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: pageSize
        schema:
          default: 10
          format: int32
          type: integer
      - in: query
        name: page
        schema:
          format: int32
          type: integer
      - in: query
        name: allComponents
        schema:
          default: false
          type: boolean
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultDTO'
          description: default response
      tags:
      - Search
  /api/v2/search/advanced/export/csv:
    get:
      operationId: getExportResults
      parameters:
      - in: query
        name: query
        schema:
          type: string
      - in: query
        name: allComponents
        schema:
          default: false
          type: boolean
      responses:
        default:
          content:
            application/csv: {}
          description: default response
      tags:
      - Search
  /api/v2/search/advanced/index:
    post:
      operationId: createSearchIndexAsync
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Search
  /api/v2/search/component:
    get:
      operationId: searchComponent
      parameters:
      - in: query
        name: stageId
        schema:
          type: string
      - in: query
        name: hash
        schema:
          type: string
      - in: query
        name: componentIdentifier
        schema:
          $ref: '#/components/schemas/ComponentIdentifier'
      - in: query
        name: packageUrl
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSearchResultsDTOV2'
          description: default response
      tags:
      - Search
  /api/v2/securityOverrides:
    get:
      operationId: getSecurityVulnerabilityOverrides
      parameters:
      - in: query
        name: refId
        schema:
          type: string
      - in: query
        name: componentPurl
        schema:
          type: string
      - in: query
        name: ownerId
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSecurityVulnerabilityOverrideResponseDTOV2'
          description: default response
      tags:
      - Security Overrides
  /api/v2/sourceControl:
    post:
      operationId: addOrUpdateSourceControl
      parameters:
      - in: query
        name: publicId
        schema:
          type: string
      - in: query
        name: repositoryUrl
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSourceControlRepositoryUserDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSourceControlDTO'
          description: default response
      tags:
      - Source Control
  /api/v2/sourceControl/{ownerType}/{internalOwnerId}:
    delete:
      operationId: deleteSourceControl
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Source Control
    get:
      operationId: getSourceControl_1
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSourceControlDTO'
          description: default response
      tags:
      - Source Control
    post:
      operationId: addSourceControl
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSourceControlDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSourceControlDTO'
          description: default response
      tags:
      - Source Control
    put:
      operationId: updateSourceControl
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSourceControlDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSourceControlDTO'
          description: default response
      tags:
      - Source Control
  /api/v2/sourceControlMetrics/{ownerType}/{internalOwnerId}:
    get:
      operationId: getSourceControl
      parameters:
      - in: path
        name: ownerType
        required: true
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          pattern: application|organization
          type: string
      - in: path
        name: internalOwnerId
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPullRequestResults'
          description: default response
      tags:
      - Source Control Metrics
  /api/v2/spdx/{applicationId}/reports/{scanId}:
    get:
      operationId: getByScanId
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: scanId
        required: true
        schema:
          type: string
      - in: query
        name: format
        schema:
          default: json
          type: string
      - in: query
        name: generateCycloneDx
        schema:
          default: false
          type: boolean
      - in: query
        name: spdxVersion
        schema:
          default: '2.3'
          type: string
      responses:
        default:
          content:
            application/json: {}
            application/octet-stream: {}
            application/xml: {}
          description: default response
      tags:
      - Spdx
  /api/v2/spdx/{applicationId}/stages/{stageId}:
    get:
      operationId: getLatestForStage
      parameters:
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      - in: path
        name: stageId
        required: true
        schema:
          type: string
      - in: query
        name: format
        schema:
          default: json
          type: string
      - in: query
        name: generateCycloneDx
        schema:
          default: false
          type: boolean
      - in: query
        name: spdxVersion
        schema:
          default: '2.3'
          type: string
      responses:
        default:
          content:
            application/json: {}
            application/octet-stream: {}
            application/xml: {}
          description: default response
      tags:
      - Spdx
  /api/v2/telemetry:
    post:
      operationId: postExternalTelemetry
      parameters:
      - in: header
        name: user-agent
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              type: object
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Telemetry
  /api/v2/userTokens:
    get:
      operationId: getUserTokensByCreatedBetweenAndRealmId
      parameters:
      - in: query
        name: createdAfter
        schema:
          type: string
      - in: query
        name: createdBefore
        schema:
          type: string
      - in: query
        name: realm
        schema:
          default: Internal
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiUserTokenDTO'
                type: array
          description: default response
      tags:
      - User Tokens
  /api/v2/userTokens/currentUser:
    delete:
      operationId: deleteCurrentUserToken
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - User Tokens
    post:
      operationId: createUserToken
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserTokenDTO'
          description: default response
      tags:
      - User Tokens
  /api/v2/userTokens/currentUser/hasToken:
    get:
      operationId: getUserTokenExistsForCurrentUser
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserTokenExistsDTO'
          description: default response
      tags:
      - User Tokens
  /api/v2/userTokens/purge:
    delete:
      operationId: purgeUserTokens
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - User Tokens
  /api/v2/userTokens/userCode/{userCode}:
    delete:
      operationId: deleteUserTokenByUserCode
      parameters:
      - in: path
        name: userCode
        required: true
        schema:
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - User Tokens
  /api/v2/userTokens/{username}:
    get:
      operationId: getUserTokenByUsernameAndRealmId
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      - in: query
        name: realm
        schema:
          default: Internal
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserTokenDTO'
          description: default response
      tags:
      - User Tokens
  /api/v2/users:
    get:
      operationId: getAll_2
      parameters:
      - in: query
        name: realm
        schema:
          default: Internal
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserListDTO'
          description: default response
      tags:
      - Users
    post:
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUserDTO'
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Users
  /api/v2/users/{username}:
    delete:
      operationId: delete_1
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      - in: query
        name: realm
        schema:
          default: Internal
          type: string
      responses:
        default:
          content:
            '*/*': {}
          description: default response
      tags:
      - Users
    get:
      operationId: get_1
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      - in: query
        name: realm
        schema:
          default: Internal
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserDTO'
          description: default response
      tags:
      - Users
    put:
      operationId: update
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUserDTO'
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserDTO'
          description: default response
      tags:
      - Users
  /api/v2/vulnerabilities/{refId}:
    get:
      operationId: getSecurityVulnerabilityDetails
      parameters:
      - in: path
        name: refId
        required: true
        schema:
          type: string
      - in: query
        name: componentIdentifier
        schema:
          $ref: '#/components/schemas/ComponentIdentifier'
      - in: query
        name: identificationSource
        schema:
          type: string
      - in: query
        name: scanId
        schema:
          type: string
      - in: query
        name: ownerType
        schema:
          enum:
          - application
          - organization
          - repository_container
          - repository_manager
          - repository
          - global
          type: string
      - in: query
        name: ownerId
        schema:
          type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityVulnerabilityData'
          description: default response
      tags:
      - Vulnerabilities
security:
- BasicAuth: []
tags:
- name: Application Categories
- name: Applications
- name: Claim
- name: Components
- name: Composite Source Control
- name: Composite Source Control Config Validator
- name: Config
- name: Config Artifactory Connection
- name: Config Crowd
- name: Config JIRA
- name: Config Mail
- name: Config Proxy Server
- name: Config Reverse Proxy Authentication
- name: Config SAML
- name: Config Source Control
- name: Cyclone Dx
- name: Data Retention Policies
- name: Endpoints
- name: Evaluation
- name: Firewall
- name: Labels
- name: License Legal Metadata
- name: Organizations
- name: Policies
- name: Policy Violations
- name: Policy Waiver
- name: Policy Waivers
- name: Product
- name: Reports
- name: Repositories
- name: Role Memberships
- name: Roles
- name: Scan
- name: Search
- name: Security Overrides
- name: Source Control
- name: Source Control Metrics
- name: Spdx
- name: Telemetry
- name: User Tokens
- name: Users
- name: Vulnerabilities
